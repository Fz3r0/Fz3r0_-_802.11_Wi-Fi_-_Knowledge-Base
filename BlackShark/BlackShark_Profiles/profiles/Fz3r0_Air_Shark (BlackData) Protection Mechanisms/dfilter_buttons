# This file is automatically generated, DO NOT MODIFY... YEAH YEAH I DON´T CARE!!!

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# 🦈 [dfilter_buttons] :: BlackShark Framework by: Fz3r0 💀

#############################################################################################
#                                                                                           #
#          @@@@@@@@@@@@@@@@@@             ((_.-'-._| BlackShark v4.0 by Fz3r0 |_.-'-._))    #
#        @@@@@@@@@@@@@@@@@@@@@@@                                                            #
#      @@@@@@@@@@@@@@@@@@@@@@@@@@@        Networking & Cyber-Security PCAP Analysis Tool    #
#     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                                         #
#    @@@@@@@@@@@@@@@/      \@@@/   @      [+] Cyber-Weapon:............. BlackShark         #
#   @@@@@@@@@@@@@@@@\      @@  @___@      [+] Version:.................. 4.0                #
#   @@@@@@@@@@@@@ @@@@@@@@@@  | \@@@@@    [+] Author:................... Fz3r0              #
#   @@@@@@@@@@@@@ @@@@@@@@@\__@_/@@@@@    [+] Github:................... github.com/Fz3r0   #
#    @@@@@@@@@@@@@@@/,/,/./´/_|.\`\,\     [+] Twitter:.................. @Fz3r0_OPs         #
#      @@@@@@@@@@@@@|  | | | | | | | |    [+] Youtube:.................. @Fz3r0_OPs         #
#                  \_|_|_|_|_|_|_|_|                                                        #
#                                                                                           #
#############################################################################################

#############################################################################################
#                                                                                           #
#                                     INSTALLATION:                                         #
#                                                                                           #
#                                                                                           #
#   1. THIS FILE GOES TO THE CUSTOM BLACKSHARK PROFILE DIRECTORY:                           #
#                                                                                           #
#      'LINUX'   >>>  /usr/local/etc/wireshark/profiles/Fz3r0_BlackShark                    # 
#                                                                                           #
#      'WINDOWS' >>>  C:\Users\%USER%\AppData\Roaming\Wireshark\profiles\Fz3r0_BlackShark   #
#                                                                                           #
#      'MAC OS'  >>>  APPDIR/Contents/Resources/share/wireshark/profiles/Fz3r0_BlackShark   #
#                                                                                           # 
#   2. EXECUTE BLACKSHARK                                                                   #
#                                                                                           #
#   3. HAVE FUN!!! 🦈💀                                                                    #
#                                                                                           #
#############################################################################################

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Welcome to the BlackShark!!!    //((_.-'-._| BlackShark v4.0 by Fz3r0 |_.-'-._))    ",    "data.data == 'Im Fz3r0'",   "Hello Im Fz3r0"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Welcome to the BlackShark!!!    //[+] Github:.................. github.com/Fz3r0    ",    "data.data == 'Im Fz3r0'",   "Hello Im Fz3r0"  
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Welcome to the BlackShark!!!    //[+] Twitter:.................. @Fz3r0_OPs         ",    "data.data == 'Im Fz3r0'",   "Hello Im Fz3r0" 
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Welcome to the BlackShark!!!    //[+] Youtube:............... @Fz3r0_OPs            ",    "data.data == 'Im Fz3r0'",   "Hello Im Fz3r0" 

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

####################################################################################
#                                                                                  #
#    ██████╗ ██████╗ ███████╗██████╗  █████╗ ████████╗ ██████╗ ██████╗ ███████╗    #
#   ██╔═══██╗██╔══██╗██╔════╝██╔══██╗██╔══██╗╚══██╔══╝██╔═══██╗██╔══██╗██╔════╝    #
#   ██║   ██║██████╔╝█████╗  ██████╔╝███████║   ██║   ██║   ██║██████╔╝███████╗    #
#   ██║   ██║██╔═══╝ ██╔══╝  ██╔══██╗██╔══██║   ██║   ██║   ██║██╔══██╗╚════██║    #
#   ╚██████╔╝██║     ███████╗██║  ██║██║  ██║   ██║   ╚██████╔╝██║  ██║███████║    #
#    ╚═════╝ ╚═╝     ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝    #
#                                                                                  #                                                                           
####################################################################################

##################################################
#
#    BASIC OPERATORS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //Equal _______________ == , eq",    "ip.addr == 192.168.0.1",    "El valor 'A' debe ser IGUAL al valor 'B'. \n \n Por ejemplo: 'La IPv4 debe ser igual a 192.268.0.1' \n \n Valor-A (IPv4) == Valor-B (192.268.0.1) \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //Not Equal: __________ != , ne",    "ip.addr != 192.168.0.1",    "El valor 'A' debe ser DIFERENTE al valor 'B'. \n \n Por ejemplo: 'La IPv4 debe ser diferente a 192.268.0.1' \n \n Valor-A (IPv4) != Valor-B (192.268.0.1) \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //Greater Than: _______ > , gt",     "all tcp.port > 1024",       "El valor 'A' debe ser MAYOR al valor 'B'. \n \n Por ejemplo: 'El Puerto TCP debe ser mayor que 1024' \n \n Valor-A (TCP Port) > Valor-B (1024) \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //Less Than: __________ < , lt",     "all tcp.port < 1024",       "El valor 'A' debe ser MENOR al valor 'B'. \n \n Por ejemplo: 'El Puerto TCP debe ser menor que 1024' \n \n Valor-A (TCP Port) < Valor-B (1024) \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //Greater/Equal to: ___ >= , ge",    "all tcp.port >= 1024",      "valor-A >= valor-B"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //Greater/Equal to: ___ <= , le",    "all tcp.port <= 1024",      "valor-A <= valor-B"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //All Equal: __________ === ",       "ip.src === 10.0.0.5",       "Si es mas de uno, que todos sean igual a... (se necesitan varios valores)"	
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Basic Operators    //At least 1 Equal ____ !== ",       "ip.src !== 10.0.0.5",       "Si es mas de uno, que aunque sea uno sea diferente a... no mostrarlo"	

##################################################
#
#    LOGICAL OPERATORS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Logical Operators    //And: ______________ and , &&",    "ip.addr == 192.168.0.1 && ip.addr == 192.168.0.2",    "TODAS las condiciones deben hacer match. \n"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Logical Operators    //Or: _______________ or  , ||",    "ip.addr == 192.168.0.1 || ip.addr == 192.168.0.2",    "CUALQUIERA de las condiciones se debe cumplir. \n"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Logical Operators    //XOr: ______________ xor , ^^",    "ip.addr == 192.168.0.1 ^^ ip.addr == 192.168.0.2",    "SOLO UNA de las condiciones se puede cumplir \n"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Logical Operators    //Not: ______________ not , !",     "!ICMP",                                               "No mostrar protocolo ICMP"

##################################################
#
#    OPERATORS COMBOS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Fz3r0 Combos    //NO STP Protocol & IP Address equal to...",          "ip.addr == 192.168.56.102 && !stp",                        "Mostrar todo el tráfico de X IPv4, pero sin mostrar tráfico STP. \n Se puede usar tanto '!' o 'not' antes del protocolo o lo que se quiera negar. \n"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Fz3r0 Combos    //All TCP packets but NO ICMP",                       "tcp && !icmp",                                             "En esta condición se muestran todos los Paquetes TCP, pero se exluye al ICMP. \n"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Operators    //Fz3r0 Combos    //NO Various Types (Grouped at same time)",           "!(eth.dst == ff:ff:ff:ff:ff:ff || arp or lldp or stp)",    "No broadcast +  no arp, no lldp, stp"



# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


####################################################################################################################
#                                                                                                                  #
#    █████╗  ██████╗ ██████╗    ██████╗     ███████╗████████╗██╗  ██╗███████╗██████╗ ███╗   ██╗███████╗████████╗   #
#   ██╔══██╗██╔═████╗╚════██╗   ╚════██╗    ██╔════╝╚══██╔══╝██║  ██║██╔════╝██╔══██╗████╗  ██║██╔════╝╚══██╔══╝   #
#   ╚█████╔╝██║██╔██║ █████╔╝    █████╔╝    █████╗     ██║   ███████║█████╗  ██████╔╝██╔██╗ ██║█████╗     ██║      #
#   ██╔══██╗████╔╝██║██╔═══╝     ╚═══██╗    ██╔══╝     ██║   ██╔══██║██╔══╝  ██╔══██╗██║╚██╗██║██╔══╝     ██║      #
#   ╚█████╔╝╚██████╔╝███████╗██╗██████╔╝    ███████╗   ██║   ██║  ██║███████╗██║  ██║██║ ╚████║███████╗   ██║      #
#    ╚════╝  ╚═════╝ ╚══════╝╚═╝╚═════╝     ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝   ╚═╝      #
#                                                                                                                  #
####################################################################################################################

#########################################################################################################
#                                                                                                       #
#     ____                              ___     ____            _   _             _   _                 #
#    / ___|  ___  _   _ _ __ ___ ___   ( _ )   |  _ \  ___  ___| |_(_)_ __   __ _| |_(_) ___  _ __      #
#    \___ \ / _ \| | | | '__/ __/ _ \  / _ \/\ | | | |/ _ \/ __| __| | '_ \ / _` | __| |/ _ \| '_ \     #
#     ___) | (_) | |_| | | | (_|  __/ | (_>  < | |_| |  __/\__ \ |_| | | | | (_| | |_| | (_) | | | |    #
#    |____/ \___/ \__,_|_|  \___\___|  \___/\/ |____/ \___||___/\__|_|_| |_|\__,_|\__|_|\___/|_| |_|    #
#                                                                                                       #
#########################################################################################################

##################################################
#
#    SOURCE & DESTINATION: BY IPV4 ADDRESS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //Filter only IPv4 packets",                       "ip",                                                      "Filtra únicamente los paquetes con tráfico IPv4"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //Full Subnet Search by IPv4",                     "ip.addr == 192.168.1.0./24",                              "Filtra todas las IPs dentro de esa Subnet / Network ID"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //Any IPv4 Address (Surce/Destination)",           "ip.addr == 192.168.0.1",                                  "Busca cualquier IP en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IPv4 Address (Source)",                          "ip.src == 192.168.0.1",                                   "Busca el IP Source que sea igual a..."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IPv4 Address (Destination)",                     "ip.dst == 192.168.0.254",                                 "Busca el IP Destination que sea igual a..."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IPv4 Addresses (by Range)",                      "ip.addr >= 10.10.50.1 && ip.addr <= 10.10.50.100",        "Busca entre un rango de 2 IPs diferentes"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IPv4 Addresses (Multiple matching &&)",          "ip.addr == 10.10.50.1 && ip.addr == 10.10.50.1",          "Busca 2 IPs en específico (Sin importar el sentido de la conversación)"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IPv4 Addresses (Multiple one or another ||)",    "ip.addr == 10.10.50.1 or ip.addr == 10.10.50.1",          "Busca cualquiera de 2 IPs diferentes"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IP Address (Starts with 192.x.x.x)",             "ip.addr >= 192.0.0.1 && ip.addr <= 192.255.255.254",      "Busca cualquier IP en todo el tráfico que comience con 192.x.x.x"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IP Address (Starts with 192.168.x.x)",           "ip.addr >= 192.168.0.1 && ip.addr <= 192.168.255.254",    "Busca cualquier IP en todo el tráfico que comience con 192.168.x.x"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv4 Address    //IP Address (Starts with 192.168.1.x)",           "ip.addr >= 192.168.1.1 && ip.addr <= 192.168.1.254",      "Busca cualquier IP en todo el tráfico que comience con 192.168.1.x"

##################################################
#
#    SOURCE & DESTINATION: BY IPv6 ADDRESS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //Filter only IPv6 packets",                              "ipv6",                                                                                         "Filtra únicamente los paquetes con tráfico IPv6"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //Full Subnet Search by IPv6",                            "ipv6.addr == 2001:db8::/32",                                                                   "Filtra todas las IPs dentro de esa Subnet / Network ID"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //Any IPv6 Address (Surce/Destination)",                  "ipv6.addr == 2001:db8::1",                                                                     "Busca cualquier IP en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Address (Source)",                                 "ipv6.src == 2001:db8::1",                                                                      "Busca el IP Source que sea igual a..."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Address (Destination)",                            "ipv6.dst == 2001:db8::ff",                                                                     "Busca el IP Destination que sea igual a..."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Addresses (by Range)",                             "ipv6.addr >= 2001:db8::1 && ipv6.addr <= 2001:db8::ff",                                        "Busca entre un rango de 2 IPs diferentes"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Addresses (Multiple matching &&)",                 "ipv6.addr == 2001:db8::1 && ipv6.addr == 2001:db8::1",                                         "Busca 2 IPs en específico (Sin importar el sentido de la conversación)"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Addresses (Multiple one or another ||)",           "ipv6.addr == 2001:db8::1 or ipv6.addr == 2001:db8::2",                                         "Busca cualquiera de 2 IPs diferentes"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Address (Starts with 2001:db8::/32)",              "ipv6.addr >= 2001:db8::1 && ipv6.addr <= 2001:db8:ffff:ffff:ffff:ffff:ffff:ffff",              "Busca cualquier IP en todo el tráfico que comience con 2001:db8::/32"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Address (Starts with 2001:db8:abcd::/48)",         "ipv6.addr >= 2001:db8:abcd::1 && ipv6.addr <= 2001:db8:abcd:ffff:ffff:ffff:ffff:ffff",         "Busca cualquier IP en todo el tráfico que comience con 2001:db8:abcd::/48"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //IPv6 Address    //IPv6 Address (Starts with 2001:db8:abcd:1234::/64)",    "ipv6.addr >= 2001:db8:abcd:1234::1 && ipv6.addr <= 2001:db8:abcd:1234:ffff:ffff:ffff:ffff",    "Busca cualquier IP en todo el tráfico que comience con 2001:db8:abcd:1234::/64"

##################################################
#
#    SOURCE & DESTINATION BY MAC ADDRESS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //Any MAC Address (Surce/Destination)",    "eth.addr == f0:f1:f2:f3:f4:f5",    "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (Source)",                   "src.addr == f0:f1:f2:f3:f4:f5",    "Busca Source MAC"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (Destination)",              "dst.addr == f0:f1:f2:f3:f4:f5",    "Busca Destination MAC"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (First 1 HEX)",              "eth.addr[0:1] == f0",              "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (First 2 HEX)",              "eth.addr[0:2] == f0:f1",           "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (First 3 HEX)",              "eth.addr[0:3] == f0:f1:f2",        "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (First 4 HEX)",              "eth.addr[0:4] == f0:f1:f2:f3",     "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (First 5 HEX)",              "eth.addr[0:5] == f0:f1:f2:f3:f4",  "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (Last 5 HEX)",           "eth.addr[4:2] == f0:f1:f2:f3:f4",      "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (Last 4 HEX)",           "eth.addr[4:2] == f1:f2:f3:f4",         "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (Last 3 HEX)",           "eth.addr[4:2] == f2:f3:f4",            "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (Last 2 HEX)",           "eth.addr[4:2] == f3:f4",               "Busca cualquier MAC en todo el tráfico, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //MAC Address    //MAC Address (Last 1 HEX)",           "eth.addr[5:1] == f4",                  "Busca el último octeto de la MAC Address"

##################################################
#
#    SOURCE & DESTINATION BY PORT NUMBER
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //Any Port (TCP/UDP)",               "tcp.port || udp.port",                "Muestra cualquier puerto, ya sea TCP o UDP."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //One Port (TCP/UDP)",               "tcp.port == 22 || udp.port == 22",    "Muestra cualquier paquete con puerto 22, ya sea TCP o UDP."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //TCP Port (Surce/Destination)",     " == 80",                              "Busca cualquier Puerto TCP 80, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //TCP Port (Source)",                "tcp.srcport == 80",                   "Muestra el Source con Puerto TCP 80"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //TCP Port (Destination)",           "tcp.dstport == 80",                   "Muestra el Destination con Puerto TCP 80"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //UDP Port (Any)",                   "udp.port == 53",                      "Busca cualquier Puerto UDP 53, sea Source o Destination"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //UDP Port (Source)",                "udp.srcport == 53",                   "Muestra el Source con Puerto UDP 53"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //UDP Port (Destination)",           "udp.dstport == 53",                   "Muestra el Destination con Puerto UDP 53"
## All ports & Well Known
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //TCP/UDP Well Known Ports",          "tcp.port <= 1023 || udp.port <= 1023",                                              "Muestra cualquier puerto conocido (well known ports) del 0 al 1023, ya sea TCP o UDP."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //Non-Well Known Ports (TCP/UDP)",    "tcp.port >= 1024 && tcp.port <= 49151 || udp.port >= 1024 && udp.port <= 49151",    "Muestra cualquier puerto no conocido (non-well known ports) del 1024 al 49151, ya sea TCP o UDP."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Addresses    //Ports (TCP/UDP)    //All Ports (TCP/UDP)",               "tcp.port <= 65535 || udp.port <= 65535",                                            "Muestra cualquier puerto del rango completo (0-65535), ya sea TCP o UDP."











##################################################
#    
#    ██████╗  █████╗ ████████╗ █████╗     ████████╗██████╗  █████╗ ███╗   ██╗███████╗███╗   ███╗██╗███████╗███████╗██╗ ██████╗ ███╗   ██╗    ████████╗██╗   ██╗██████╗ ███████╗
#    ██╔══██╗██╔══██╗╚══██╔══╝██╔══██╗    ╚══██╔══╝██╔══██╗██╔══██╗████╗  ██║██╔════╝████╗ ████║██║██╔════╝██╔════╝██║██╔═══██╗████╗  ██║    ╚══██╔══╝╚██╗ ██╔╝██╔══██╗██╔════╝
#    ██║  ██║███████║   ██║   ███████║       ██║   ██████╔╝███████║██╔██╗ ██║███████╗██╔████╔██║██║███████╗███████╗██║██║   ██║██╔██╗ ██║       ██║    ╚████╔╝ ██████╔╝█████╗  
#    ██║  ██║██╔══██║   ██║   ██╔══██║       ██║   ██╔══██╗██╔══██║██║╚██╗██║╚════██║██║╚██╔╝██║██║╚════██║╚════██║██║██║   ██║██║╚██╗██║       ██║     ╚██╔╝  ██╔═══╝ ██╔══╝  
#    ██████╔╝██║  ██║   ██║   ██║  ██║       ██║   ██║  ██║██║  ██║██║ ╚████║███████║██║ ╚═╝ ██║██║███████║███████║██║╚██████╔╝██║ ╚████║       ██║      ██║   ██║     ███████╗
#    ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═╝       ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚══════╝╚═╝     ╚═╝╚═╝╚══════╝╚══════╝╚═╝ ╚═════╝ ╚═╝  ╚═══╝       ╚═╝      ╚═╝   ╚═╝     ╚══════╝                                                                                                                                                                                                                                        
#
##################################################  

 
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Data Transmission Type                      //Unicast",                                                   "eth.dst.ig == 0",                                  "Filtra TODO el tráfico Unicast. \n \n La transmisión unicast es una conexión punto a punto (P2P Point-to-Point) entre dos dispositivos en una red. \n En este tipo de transmisión, un dispositivo envía datos a un único destinatario. \n \n Por ejemplo, cuando envías un correo electrónico a alguien, la conexión entre tu dispositivo y el servidor de correo es unicast. \n \n Ejemplos de Protocolos Unicast: \n \n DNS, DHCP, Telnet, SSH, SNMP, RTP, SIP, POP3, IMAP, SMB. \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Data Transmission Type                      //Broadcast",                                                 "eth.addr == ff:ff:ff:ff:ff:ff",                    "Filtra TODO el tráfico Broadcast. \n \n La transmisión broadcast implica el envío de datos a todos los dispositivos en una red. En este tipo de transmisión, un dispositivo envía datos a todos los dispositivos conectados a la red. Por ejemplo, cuando envías un mensaje a todos los usuarios de una red social, la conexión entre tu dispositivo y la red social es broadcast. \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Data Transmission Type                      //Multicast (opción 1)",                                      "eth.dst.ig == 1",                                  "The IG bit distinguishes whether the MAC address is an individual or group (hence IG) address. In other words, an IG bit of 0 indicates that this is a unicast MAC address, an IG bit of 1 indicates a multicast or broadcast address."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.3 - Ethernet    //Data Transmission Type                      //Multicast (opción 2)",                                      "(eth.dst[0]&1) && !eth.dst==ff:ff:ff:ff:ff:ff ",   "(eth.dst[0]&1) will filter both multicast and broadcast. So, from this exclude broadcast. "



































#######################################################################
#    
#     █████╗  ██████╗ ██████╗    ██╗ ██╗    ██╗    ██╗██╗███████╗██╗
#    ██╔══██╗██╔═████╗╚════██╗  ███║███║    ██║    ██║██║██╔════╝██║
#    ╚█████╔╝██║██╔██║ █████╔╝  ╚██║╚██║    ██║ █╗ ██║██║█████╗  ██║
#    ██╔══██╗████╔╝██║██╔═══╝    ██║ ██║    ██║███╗██║██║██╔══╝  ██║
#    ╚█████╔╝╚██████╔╝███████╗██╗██║ ██║    ╚███╔███╔╝██║██║     ██║
#     ╚════╝  ╚═════╝ ╚══════╝╚═╝╚═╝ ╚═╝     ╚══╝╚══╝ ╚═╝╚═╝     ╚═╝                                                              
#
#######################################################################  

##################################################
#
#    IEEE 802.11 WI-FI - ADDRESSES
#
##################################################

# Any WLAN Address
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //Any WLAN Device MAC Address _ (STA/AP || TA/RA/SA/DA/BSSID)",         "wlan.addr == 00:0d:93:82:36:3a",           "Cuelquier dispositivo IEEE 802.11 que transmita o reciba en el canal (Tx/Rx) puede ser TA, RA, SA, DA"
# SSID / BSSID
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //SSID (WLAN ID) _____________________ (SSID)",                         "wlan.mgt.ssid == 'Guest_SSID'",            "Filtra el SSID"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //BSSID (AP) ___________________________ (BSSID)",                      "wlan.bssid == fc:5c:45:8d:e9:b9",          "Filtra el BSSID"
# TA
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //Client Station _______________________ (STA)",                        "wlan.staa == 00:0d:93:82:36:3a",           "Filtra cualquier Estación-Cliente (STA) dentro de la red WLAN. (Ej. Un iphone o una laptop)"
# TA, RA, SA, DA
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //Transmitter Address ________________ (TA)",                           "wlan.ta == fc:5c:45:8d:e9:b9",             "Dispositivo que transmite en frame (TA --> Tx) :: Ej. En un Beacon, sería el AP | Data como ICMP, puede ser AP o STA"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //Receiver Address ___________________ (RA)",                           "wlan.ra == ff:ff:ff:ff:ff:ff",             "Dispositivo que recibe en frame (RA --> Rx) :: Ej. En un Beacon, sería el TODO dispositivo que pueda modular el frame (ya que el beacon es broadcast) | En un Data Frame como ICMP, puede ser AP o STA)"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //Source Address _____________________ (SA)",                           "wlan.sa == fc:5c:45:8d:e9:b9",             "Dispositivo que origina el frame | Management y Control Frames siempre los genera el AP o STA | Los Data Frames pueden proceder desde el DS (Distribution Service), el AP, o la STA."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //Addresses    //Destionation Address _______________ (DA)",                           "wlan.da == ff:ff:ff:ff:ff:ff",             "Dispositivo final que recibirá el frame | Management y Control Frames siempre los genera el AP o STA  | Los Data Frames pueden tener de destino el DS (Distribution Service), el AP, o la STA."































##################################################
#
#    802.11 - MANAGEMENT FRAMES
#
##################################################

# All Management
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //ALL Management Frames",      "wlan.fc.type == 0",                                  "Se utilizan para establecer, mantener y desmontar una conexión entre un Cliente (STA) y un AP, así como para transmitir información de Control y Configuración de la red."

# Association Requests \\>
# ------------------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Association Requests",       "wlan.fc.type == 0 && wlan.fc.type_subtype == 0",     "Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexión. Contiene la dirección MAC del cliente STA solicitante y parámetros de compatibilidad."

# Association Response \\>
# ------------------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Association Response",       "wlan.fc.type == 0 && wlan.fc.type_subtype == 1",     "Enviado por el AP hacia el Cliente (STA) que ha enviado previamente un 'Association Request' para unirse a la red inalámbrica. El AP responde al cliente indicando si la solicitud de asociación se ha aceptado o rechazado, y proporciona detalles de configuración adicionales para la conexión si la asociación se acepta."

# Re-Association Request \\>
# --------------------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Re-Association Request",     "wlan.fc.type == 0 && wlan.fc.type_subtype == 2",     "Enviado por el Cliente (STA) a un nuevo AP de la misma red. Contiene información detallada de un Cliente (STA) que ya está asociado a una red WiFi y que desea cambiar su asociación a otro AP en la misma red inalámbrica (hacer roaming a otro AP). Este Frame se utiliza comúnmente en redes inalámbricas empresariales donde hay varios APs en la misma red."

# Re-Association Response \\>
# ---------------------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Re-Association Response",    "wlan.fc.type == 0 && wlan.fc.type_subtype == 3",     "Enviado por el nuevo AP en respuesta al 'Re-Association Request' del cliente (STA). Si el nuevo AP acepta la solicitud de asociación del cliente, el Frame incluirá detalles de configuración adicionales para la conexión. Este Frame es muy importante para que el Cliente (STA) pueda hacer roaming sin tener interrupciones en la conexión."

# Probe Request \\>
# -----------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Probe Request",              "wlan.fc.type == 0 && wlan.fc.type_subtype == 4",     "Solicitud de información de otro cliente STA. Usada por un cliente STA para descubrir redes disponibles."

# Probe Response \\>
# ------------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Probe Response",             "wlan.fc.type == 0 && wlan.fc.type_subtype == 5",     "Respuesta a una solicitud de sondeo. Contiene información sobre la red, como las tasas de datos soportadas y las capacidades. Idéntica a una trama de gestión de Beacon, con la excepción del mapa de indicación de tráfico (TIM) utilizado para los mecanismos de ahorro de energía."

# Timing Advertisement \\>
# ------------------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Timing Advertisement",       "wlan.fc.type == 0 && wlan.fc.type_subtype == 6",     "Anuncia información de sincronización. Se utiliza para sincronizar el tiempo de las estaciones dentro de una red. (No es un estándar 802.11)"

# Unrecognized / Reserved \\>
# ------------------------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Unrecognized / Reserved",    "wlan.fc.type == 0 && wlan.fc.type_subtype == 7",     "Subtipo reservado. No se usa en operaciones estándar."


# Beacon \\>
# ----------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //ALL Beacon Frames",          "wlan.fc.type == 0 && wlan.fc.type_subtype == 8",                      "Anuncia la presencia de una red. Enviado periódicamente por los APs para anunciar la red y sus capacidades."

    # Beacon :::  5 Mandatory Fields   :   1) Timestamp 
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[1] Timestamp",          "wlan.fixed.timestamp == 2078442701205",    "8 bytes. Un valor que representa el tiempo en el punto de acceso, que es el número de microsegundos que el AP ha estado activo. Cuando el timestamp alcanza su máximo (2^64 microsegundos o aproximadamente 580,000 años), se reiniciará a 0. Este campo se encuentra en la trama de Beacon y en el Probe Response." 
    # Beacon :::  5 Mandatory Fields   :   2) Beacon Interval
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[2] Beacon Interval",    "wlan.fixed.beacon == 100",                 "2 bytes. Un valor que representa el tiempo en el que el AP ha estado activo, que es el número de microsegundos que el AP ha estado en funcionamiento. Cuando el timestamp alcanza su máximo (2^64 microsegundos o ~580,000 años), se reinicia a 0."
    # Beacon :::  5 Mandatory Fields   :   3) Capability Information 
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //ALL Capabilities (Ox HEX)",        "wlan.fixed.capabilities == 0x1511",                 "2 bytes. Información sobre las capacidades del punto de acceso, representada como un código hexadecimal."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //ESS capabilites",                  "wlan.fixed.capabilities.ess == 1",                  "Indica si el punto de acceso es una red de sistema de distribución extendido (ESS)."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //IBSS status",                      "wlan.fixed.capabilities.ibss == 0",                 "Indica si el punto de acceso es una red de sistema de distribución independiente (IBSS)."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Reserved 1",                       "wlan.fixed.capabilities.reserved1 == 0",            "Campo reservado para uso futuro, actualmente sin uso."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Reserved 2",                       "wlan.fixed.capabilities.reserved2 == 0",            "Campo reservado para uso futuro, actualmente sin uso."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Privacy",                          "wlan.fixed.capabilities.privacy == 1",              "Indica si el punto de acceso usa cifrado para las comunicaciones (WEP, WPA, WPA2)."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Short Preamble",                   "wlan.fixed.capabilities.short_preamble == 0",       "Indica si el punto de acceso soporta preámbulo corto en las comunicaciones."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Reserved 3",                       "wlan.fixed.capabilities.reserved3 == 0",            "Campo reservado para uso futuro, actualmente sin uso."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Reserved 4",                       "wlan.fixed.capabilities.reserved4 == 0",            "Campo reservado para uso futuro, actualmente sin uso."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Spectrum Management",              "wlan.fixed.capabilities.spec_man == 1",             "Indica si el punto de acceso soporta la gestión del espectro de frecuencias."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //QoS",                              "wlan.fixed.capabilities.qos == 0",                  "Indica si el punto de acceso soporta Calidad de Servicio (QoS)."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Short Slot Time",                  "wlan.fixed.capabilities.short_slot_time == 1",      "Indica si el punto de acceso usa tiempos de ranura cortos para mejorar el rendimiento."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Automatic Power Save Delivery",    "wlan.fixed.capabilities.apsd == 0",                 "Indica si el punto de acceso soporta la entrega automática de ahorro de energía."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Radio Measurement",                "wlan.fixed.capabilities.radio_measurement == 1",    "Indica si el punto de acceso soporta la medición de radiofrecuencia."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //EPD (Enhanced Packet Delivery)",   "wlan.fixed.capabilities.epd == 0",                  "Indica si el punto de acceso soporta la entrega de paquetes enriquecidos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Reserved 5",                       "wlan.fixed.capabilities.reserved5 == 0",            "Campo reservado para uso futuro, actualmente sin uso."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[3] Capability Information    //Reserved 6",                       "wlan.fixed.capabilities.reserved6 == 0",            "Campo reservado para uso futuro, actualmente sin uso."
  # Beacon :::  5 Mandatory Fields   :   4) SSID
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[4] SSID                      //Tag Number",                       "wlan.tag.number == 0",            "Número de etiqueta que identifica el campo SSID en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[4] SSID                      //Tag Length",                       "wlan.tag.length == 5",            "Longitud de la etiqueta SSID en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[4] SSID                      //SSID",                             "wlan.ssid == F0",                 "Identificador de la red (SSID) transmitido en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[4] SSID                      //Hidden SSID (Wildcard)",           "wlan.ssid == \"\"",               "SSID oculto transmitido en la trama de Beacon cuando la red está configurada para no mostrar su SSID."

  # Beacon :::  5 Mandatory Fields   :   5) Supported Rates
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[5] Supported Rates           //All Supported Rates",              "wlan.supported_rates",            "Tasas de datos soportadas por el punto de acceso, indicadas en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[5] Supported Rates           //Supported Data Rate = 12 Mbps",    "wlan.supported_rates == 0x98",    "Tasa de datos soportada de 12 Mbps, indicada en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[5] Supported Rates           //Supported Data Rate = 18 Mbps",    "wlan.supported_rates == 0x24",    "Tasa de datos soportada de 18 Mbps, indicada en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[5] Supported Rates           //Supported Data Rate = 24 Mbps",    "wlan.supported_rates == 0x30",    "Tasa de datos soportada de 24 Mbps, indicada en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[5] Supported Rates           //Supported Data Rate = 36 Mbps",    "wlan.supported_rates == 0x48",    "Tasa de datos soportada de 36 Mbps, indicada en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[5] Supported Rates           //Supported Data Rate = 48 Mbps",    "wlan.supported_rates == 0x60",    "Tasa de datos soportada de 48 Mbps, indicada en la trama de Beacon."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //5 Beacon Mandatory Fields    //[5] Supported Rates           //Supported Data Rate = 54 Mbps",    "wlan.supported_rates == 0x6c",    "Tasa de datos soportada de 54 Mbps, indicada en la trama de Beacon."

    # Beacon :::  Optional Fields : 
#"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Beacon   //Optional Fields    //", 


# ATIM \\>
# ----------
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //ATIM",                       "wlan.fc.type == 0 && wlan.fc.type_subtype == 9",     "Mensaje de Indicación de Tráfico Anunciado. Utilizado en redes ad-hoc para anunciar datos en búfer para clientes STA de ahorro de energía."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Disassociation",             "wlan.fc.type == 0 && wlan.fc.type_subtype == 10",    "Notifica a un cliente STA que se está desasociando de la red. Se utiliza para terminar una asociación."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Authentication",             "wlan.fc.type == 0 && wlan.fc.type_subtype == 11",    "Trama de autenticación. Se utiliza en el proceso de autenticar a un cliente STA antes de que pueda asociarse con una red."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Deauthentication",           "wlan.fc.type == 0 && wlan.fc.type_subtype == 12",    "Notifica a un cliente STA que se está desautenticando de la red. Se utiliza para terminar la autenticación."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Action",                     "wlan.fc.type == 0 && wlan.fc.type_subtype == 13",    "Trama de acción. Se utiliza para diversas acciones de gestión como la gestión del espectro, la gestión de QoS y la gestión de seguridad."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Action No ACK",              "wlan.fc.type == 0 && wlan.fc.type_subtype == 14",    "Trama de acción sin acuse de recibo. Similar a la trama de acción pero no requiere acuse de recibo. (No es un estándar 802.11)"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Management Frames    //Aruba Management",           "wlan.fc.type == 0 && wlan.fc.type_subtype == 15",    "Trama de gestión específica de Aruba. Se utiliza para funciones de gestión propietarias específicas de las redes Aruba. (No es un estándar 802.11)"


##################################################
#
#    802.11 - CONTROL FRAMES
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //ALL Control Frames",                        "wlan.fc.type == 1",                               "Todos los control frames, incluyendo el reconocimiento de datos, la reserva de red y la sondeo de datos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Unrecognized / Reserved (0000)",            "wlan.fc.type == 1 && wlan.fc.type_subtype == 16", "Subtipo reservado. No se utiliza en operaciones estándar."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Unrecognized / Reserved (0001)",            "wlan.fc.type == 1 && wlan.fc.type_subtype == 17", "Subtipo reservado. No se utiliza en operaciones estándar."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Trigger",                                   "wlan.fc.type == 1 && wlan.fc.type_subtype == 18", "Un frame utilizado para iniciar transmisiones de enlace ascendente desde clientes STA en redes de alta eficiencia (HE)."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Unrecognized / Reserved (0011)",            "wlan.fc.type == 1 && wlan.fc.type_subtype == 19", "Subtipo reservado. No se utiliza en operaciones estándar."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Beamforming Report Poll",                   "wlan.fc.type == 1 && wlan.fc.type_subtype == 20", "Sondea a un cliente STA para un informe de beamforming. Utilizado en procesos de MU-MIMO y beamforming."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //VHT/HE NDP Announcement",                   "wlan.fc.type == 1 && wlan.fc.type_subtype == 21", "Anuncia el inicio de una transmisión de Null Data Packet (NDP) en modos de Very High Throughput (VHT) y High Efficiency (HE)."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Control Frame Extension",                   "wlan.fc.type == 1 && wlan.fc.type_subtype == 22", "Frame de control extendido para funciones de control adicionales no cubiertas por los frames de control estándar."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Control Wrapper",                           "wlan.fc.type == 1 && wlan.fc.type_subtype == 23", "Un frame utilizado para encapsular y transmitir otros frames de control."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Block Ack Request (BlockAckReq)",    "wlan.fc.type == 1 && wlan.fc.type_subtype == 24",     "Solicita un reconocimiento de bloque para una serie de frames previamente transmitidos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Block Ack (BlockAck)",                      "wlan.fc.type == 1 && wlan.fc.type_subtype == 25", "Reconoce un bloque de frames recibidos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //Power Save (PS)-Poll",                      "wlan.fc.type == 1 && wlan.fc.type_subtype == 26", "Sondea al AP para comprobar si hay datos en búfer mientras el cliente STA está en modo de ahorro de energía."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //RTS (Request to Send)",                     "wlan.fc.type == 1 && wlan.fc.type_subtype == 27", "Inicia el proceso para ganar control del medio antes de transmitir datos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //CTS (Clear to Send)",                       "wlan.fc.type == 1 && wlan.fc.type_subtype == 28", "Enviado en respuesta a un RTS para indicar que el medio está libre para la transmisión de datos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //ACK (Acknowledgement)",                     "wlan.fc.type == 1 && wlan.fc.type_subtype == 29", "Reconoce la recepción de un frame de datos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //CF-End",                                    "wlan.fc.type == 1 && wlan.fc.type_subtype == 30", "Finaliza el periodo libre de contención en modo PCF."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Control Frames    //CF-End + CF-Ack",                           "wlan.fc.type == 1 && wlan.fc.type_subtype == 31", "Finaliza el periodo libre de contención y reconoce la recepción de frames de datos."


##################################################
#
#    802.11 - DATA FRAMES
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //ALL Data Frames",            "wlan.fc.type == 2",             "Se utilizan para transmitir MAC Service Data Units (MSDUs) y la información contenida en el MAC Header."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //Data",                    "wlan.fc.type == 2 && wlan.fc.type_subtype == 32", "Trama de datos estándar utilizada para llevar cargas útiles de datos de capas superiores, típicamente entre clientes (STAs) y puntos de acceso (APs)."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //Data + CF-Ack",           "wlan.fc.type == 2 && wlan.fc.type_subtype == 33", "Trama de datos con acuse de recibo sin contención, utilizada para confirmar la recepción de datos durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //Data + CF-Poll",          "wlan.fc.type == 2 && wlan.fc.type_subtype == 34", "Trama de datos con sondeo sin contención, utilizada por APs para sondear a los STAs cliente por datos durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //Data + CF-Ack + CF-Poll", "wlan.fc.type == 2 && wlan.fc.type_subtype == 35", "Trama de datos con acuse de recibo y sondeo sin contención, utilizada para confirmar la recepción y sondear datos durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //Null Data",               "wlan.fc.type == 2 && wlan.fc.type_subtype == 36", "Trama de datos nula, utilizada para mantener la asociación con el AP sin transportar ninguna carga útil de datos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //CF-Ack",                  "wlan.fc.type == 2 && wlan.fc.type_subtype == 37", "Trama de acuse de recibo sin contención, utilizada para confirmar la recepción de datos durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //CF-Poll",                 "wlan.fc.type == 2 && wlan.fc.type_subtype == 38", "Trama de sondeo sin contención, utilizada por los APs para solicitar datos a los STAs cliente durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //CF-Ack + CF-Poll",        "wlan.fc.type == 2 && wlan.fc.type_subtype == 39", "Trama combinada de acuse de recibo y sondeo sin contención, utilizada para confirmar la recepción y solicitar datos durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //QoS Data",               "wlan.fc.type == 2 && wlan.fc.type_subtype == 40", "Trama de datos con Calidad de Servicio (QoS), utilizada para transportar cargas útiles de datos con niveles de prioridad QoS."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //QoS Data + CF-Ack",      "wlan.fc.type == 2 && wlan.fc.type_subtype == 41", "Trama de datos QoS con acuse de recibo sin contención, utilizada para confirmar la recepción de datos con prioridad QoS durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //QoS Data + CF-Poll",     "wlan.fc.type == 2 && wlan.fc.type_subtype == 42", "Trama de datos QoS con sondeo sin contención, utilizada por los APs para solicitar datos QoS a los STAs cliente durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //QoS Data + CF-Ack + CF-Poll", "wlan.fc.type == 2 && wlan.fc.type_subtype == 43", "Trama de datos QoS con acuse de recibo y sondeo sin contención, utilizada para confirmar la recepción y solicitar datos QoS durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //QoS Null",               "wlan.fc.type == 2 && wlan.fc.type_subtype == 44", "Trama de datos QoS nula, utilizada para mantener la asociación QoS con el AP sin transportar ninguna carga útil de datos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //QoS CF-Poll",            "wlan.fc.type == 2 && wlan.fc.type_subtype == 45", "Trama de sondeo QoS sin contención, utilizada por los APs para solicitar datos QoS a los STAs cliente durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //QoS CF-Ack + CF-Poll",   "wlan.fc.type == 2 && wlan.fc.type_subtype == 46", "Trama combinada de acuse de recibo QoS y sondeo sin contención, utilizada para confirmar la recepción y solicitar datos QoS durante los períodos sin contención."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 MAC Frames    //Data Frames  //Unrecognized / Reserved", "wlan.fc.type == 2 && wlan.fc.type_subtype == 47", "Subtipo reservado no utilizado en operaciones estándar."








                                                                                 
#     ____  ____  _____ _   _ ____   ___  _   _ _____    _    ____  _____ ____  ____  
#    |  _ \/ ___|| ____| | | |  _ \ / _ \| | | | ____|  / \  |  _ \| ____|  _ \/ ___| 
#    | |_) \___ \|  _| | | | | | | | | | | |_| |  _|   / _ \ | | | |  _| | |_) \___ \ 
#    |  __/ ___) | |___| |_| | |_| | |_| |  _  | |___ / ___ \| |_| | |___|  _ < ___) |
#    |_|   |____/|_____|\___/|____/ \___/|_| |_|_____/_/   \_|____/|_____|_| \_|____/ 
                                                                                 



##################################
#                                #
#    802.11 - RADIOTAP HEADER    #
#                                #
##################################
# Version
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Version          //Version 0 (only available today)",    "radiotap.version == 0",    "Version: Filtra tramas donde la versión del encabezado Radiotap es 0 (actualmente el valor siempre 0 ya que no ha salido ninguna nueva versión hasta el momento)."
# Pad
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Pad              //Pad 0 (unused)",                      "radiotap.pad == 0",        "Pad: Filtra tramas donde el campo Pad en el encabezado Radiotap es 0 (actualmente no usado)"
# Lenght
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Lenght           //Lenght Equal 50 bits",                "radiotap.length == 50",    "Length Equal 50 bits: Filtra tramas donde la longitud total del encabezado Radiotap es igual a 50 bits"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Lenght           //Lenght Less than 50 bits",            "radiotap.length < 50",     "Length Less than 50 bits: Filtra tramas donde la longitud total del encabezado Radiotap es menor a 50 bits"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Lenght           //Lenght More than 50 bits",            "radiotap.length > 50",     "Length More than 50 bits: Filtra tramas donde la longitud total del encabezado Radiotap es mayor a 50 bits"
# Present Flags
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //TSFT",                  "radiotap.present.tsft == 1",                 "TSFT (Time Synchronization Function Timer): Filtra tramas donde el encabezado Radiotap indica que el campo TSFT está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Flags",                 "radiotap.present.flags == 1",                "Flags: Filtra tramas donde el encabezado Radiotap indica que el campo Flags está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Rate",                  "radiotap.present.rate == 1",                 "Rate: Filtra tramas donde el encabezado Radiotap indica que el campo Rate está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Channel",               "radiotap.present.channel == 1",              "Channel: Filtra tramas donde el encabezado Radiotap indica que el campo Channel está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //FHSS",                  "radiotap.present.fhss == 1",                 "FHSS (Frequency-Hopping Spread Spectrum): Filtra tramas donde el encabezado Radiotap indica que el campo FHSS está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //dBm Antenna Signal",    "radiotap.present.dbm_antsignal == 1",        "dBm Antenna Signal: Filtra tramas donde el encabezado Radiotap indica que el campo dBm Antenna Signal está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //dBm Antenna Noise",     "radiotap.present.dbm_antnoise == 1",         "dBm Antenna Noise: Filtra tramas donde el encabezado Radiotap indica que el campo dBm Antenna Noise está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Lock Quality",          "radiotap.present.lock_quality == 1",         "Lock Quality: Filtra tramas donde el encabezado Radiotap indica que el campo Lock Quality está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //TX Attenuation",        "radiotap.present.tx_attenuation == 1",       "TX Attenuation: Filtra tramas donde el encabezado Radiotap indica que el campo TX Attenuation está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //db TX Attenuation",     "radiotap.present.db_tx_attenuation == 1",    "dB TX Attenuation: Filtra tramas donde el encabezado Radiotap indica que el campo dB TX Attenuation está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //dBm TX Power",          "radiotap.present.dbm_tx_power == 1",         "dBm TX Power: Filtra tramas donde el encabezado Radiotap indica que el campo dBm TX Power está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Antenna",               "radiotap.present.antenna == 1",              "Antenna: Filtra tramas donde el encabezado Radiotap indica que el campo Antenna está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //dB Antenna Signal",     "radiotap.present.db_antsignal == 1",         "dB Antenna Signal: Filtra tramas donde el encabezado Radiotap indica que el campo dB Antenna Signal está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //dB Antenna Noise",      "radiotap.present.db_antnoise == 1",          "dB Antenna Noise: Filtra tramas donde el encabezado Radiotap indica que el campo dB Antenna Noise está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //RX Flags",              "radiotap.present.rxflags == 1",              "RX Flags: Filtra tramas donde el encabezado Radiotap indica que el campo RX Flags está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //TX Flags",              "radiotap.present.txflags == 1",              "TX Flags: Filtra tramas donde el encabezado Radiotap indica que el campo TX Flags está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Data Retries",          "radiotap.present.data_retries == 1",         "Data Retries: Filtra tramas donde el encabezado Radiotap indica que el campo Data Retries está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Channel+",              "radiotap.present.xchannel == 1",             "Channel+: Filtra tramas donde el encabezado Radiotap indica que el campo Channel+ está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //MCS Information",       "radiotap.present.mcs == 1",                  "MCS Information: Filtra tramas donde el encabezado Radiotap indica que el campo MCS Information está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //A-MPDU Status",         "radiotap.present.ampdu == 1",                "A-MPDU Status: Filtra tramas donde el encabezado Radiotap indica que el campo A-MPDU Status está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //VHT Information",       "radiotap.present.vht == 1",                  "VHT Information: Filtra tramas donde el encabezado Radiotap indica que el campo VHT Information está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Frame Timesamp",        "radiotap.present.timestamp == 1",            "Frame Timestamp: Filtra tramas donde el encabezado Radiotap indica que el campo Frame Timestamp está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //HE Information",        "radiotap.present.he == 1",                   "HE Information: Filtra tramas donde el encabezado Radiotap indica que el campo HE Information está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //HE-MU Information",     "radiotap.present.he_mu == 1",                "HE-MU Information: Filtra tramas donde el encabezado Radiotap indica que el campo HE-MU Information está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //0 Length PSDU",         "radiotap.present.0_length.psdu == 1",        "0 Length PSDU: Filtra tramas donde el encabezado Radiotap indica que el campo 0 Length PSDU está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //L-SIG",                 "radiotap.present.l_sig == 1",                "L-SIG (Legacy-Signal): Filtra tramas donde el encabezado Radiotap indica que el campo L-SIG está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Reserved",              "radiotap.present.reserved == 0x0",           "Reserved: Filtra tramas donde el encabezado Radiotap indica que el campo Reserved está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //TLVs",                  "radiotap.present.tlv == 1",                  "TLVs (Type-Length-Values): Filtra tramas donde el encabezado Radiotap indica que el campo TLVs está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Radiotap NS",           "radiotap.present.rtap_ns == 1",              "Radiotap NS (Name Space): Filtra tramas donde el encabezado Radiotap indica que el campo Radiotap NS está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Vendor NS",             "radiotap.present.vendor_ns == 1",            "Vendor NS (Name Space): Filtra tramas donde el encabezado Radiotap indica que el campo Vendor NS está presente en el encabezado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Present Flags    //Ext",                   "radiotap.present.ext == 1",                  "Ext: Filtra tramas donde el encabezado Radiotap indica que el campo Ext está presente en el encabezado."
# MAC Timestamp
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //MAC Timestamp    //MAC Timestamp = 0 microseconds",                "radiotap.mactime == 0",               "MAC Timestamp: 0 microsegundos: Filtra tramas donde el valor del Timestamp de MAC es 0 microsegundos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //MAC Timestamp    //MAC Timestamp = 131373891612 microseconds",     "radiotap.mactime == 131373891612",    "MAC Timestamp: 131373891612 microsegundos: Filtra tramas donde el valor del Timestamp de MAC es 131373891612 microsegundos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //MAC Timestamp    //MAC Timestamp less than 10000 microseconds",    "radiotap.mactime < 1000",             "MAC Timestamp menos de 10000 microsegundos: Filtra tramas donde el valor del Timestamp de MAC es menor a 10000 microsegundos."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //MAC Timestamp    //MAC Timestamp more than 10000 microseconds",    "radiotap.mactime > 10000",            "MAC Timestamp más de 10000 microsegundos: Filtra tramas donde el valor del Timestamp de MAC es mayor a 10000 microsegundos."
# Flags Properties
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //CFP (Contention Free Period)",       "radiotap.flags.cfp == 1",        "CFP (Contention Free Period): Filtra tramas donde el campo CFP está presente en el encabezado Radiotap."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //Preamble (0 = Long | 1 = Short)",    "radiotap.flags.preamble == 1",   "Preamble (0 = Long | 1 = Short): Filtra tramas donde el campo Preamble está presente en el encabezado Radiotap, con el valor 1 indicando un preámbulo corto."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //WEP (Wired Equivalent Privacy)",     "radiotap.flags.wep == 1",        "WEP (Wired Equivalent Privacy): Filtra tramas donde el campo WEP está presente en el encabezado Radiotap."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //Fragmentation",                      "radiotap.flags.frag == 1",       "Fragmentation: Filtra tramas donde el campo Fragmentation está presente en el encabezado Radiotap."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //FCS-at-end",                         "radiotap.flags.fcs == 1",        "FCS-at-end (Frame Check Sequence at end): Filtra tramas donde el campo FCS-at-end está presente en el encabezado Radiotap."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //Datapad",                            "radiotap.flags.datapad == 1",    "Datapad: Filtra tramas donde el campo Datapad está presente en el encabezado Radiotap."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //Bad FCS",                            "radiotap.flags.badfcs == 1",     "Bad FCS (Frame Check Sequence): Filtra tramas donde el campo Bad FCS está presente en el encabezado Radiotap."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Flags Properties    //Short GI (Guard Interval)",          "radiotap.flags.shortgi == 1",    "Short GI (Guard Interval): Filtra tramas donde el campo Short GI está presente en el encabezado Radiotap."
# Channel Bandwidth
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11n | Wi-Fi 4) :: 20 MHz",          "radiotap.mcs.bw == 0",    "Filtra los Frames transmitidos con PHY 802.11n (Wi-fi 4) a 20 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11n | Wi-Fi 4) :: 40 MHz",          "radiotap.mcs.bw == 1",    "Filtra los Frames transmitidos con PHY 802.11n (Wi-fi 4) a 40 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ac | Wi-Fi 5) :: 20 MHz",          "radiotap.vht.bw == 0",    "Filtra los Frames transmitidos con PHY 802.11ac (Wi-Fi 5) a 20 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ac | Wi-Fi 5) :: 40 MHz",          "radiotap.vht.bw == 1",    "Filtra los Frames transmitidos con PHY 802.11ac (Wi-Fi 5) a 40 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ac | Wi-Fi 5) :: 80 MHz",          "radiotap.vht.bw == 4",    "Filtra los Frames transmitidos con PHY 802.11ac (Wi-Fi 5) a 80 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ac | Wi-Fi 5) :: 160 MHz",         "radiotap.vht.bw == 11",   "Filtra los Frames transmitidos con PHY 802.11ac (Wi-Fi 5) a 160 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ax | Wi-Fi 6) :: 20 MHz",          "radiotap.he.data_5.data_bw_ru_allocation == 0",    "Filtra los Frames transmitidos con PHY 802.11ax (Wi-Fi 6) a 20 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ax | Wi-Fi 6) :: 40 MHz",          "radiotap.he.data_5.data_bw_ru_allocation == 1",    "Filtra los Frames transmitidos con PHY 802.11ax (Wi-Fi 6) a 40 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ax | Wi-Fi 6) :: 80 MHz",          "radiotap.he.data_5.data_bw_ru_allocation == 2",    "Filtra los Frames transmitidos con PHY 802.11ax (Wi-Fi 6) a 80 MHz de Ancho de Banda."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Channel Bandwidth    //(802.11ax | Wi-Fi 6) :: 160 MHz",         "radiotap.he.data_5.data_bw_ru_allocation == 3",    "Filtra los Frames transmitidos con PHY 802.11ax (Wi-Fi 6) a 160 MHz de Ancho de Banda."

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //IEEE 802.11 (Wi-Fi)    //802.11 Pseudo Headers    //Radiotap Header        //Data Rate    //1 Mbps Data Rate",         "radiotap.he.data_5.data_bw_ru_allocation == 3",    "Filtra los Frames transmitidos con un Data Rate de 1 Mbps."


























##################################################
#
#    802.11 - RADIO INFORMATION
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //802.11 Wireless / WiFi    //802.11: Radio Information    //Duration _____ (μs = SIFs + Duration)",     "wlan_radio.duration >= 200",    "La duración del tiempo que se utilizará para la transmisión del paquete de datos en la red WiFi. Este campo se utiliza para informar a otros dispositivos de la red sobre cuánto tiempo deberán esperar antes de enviar datos por la misma frecuencia. El valor de 'duration' se calcula en función de la tasa de transmisión de datos y del tamaño del paquete de datos. El valor se representa en microsegundos (μs) y se redondea al siguiente valor entero más alto. El valor de 'duration' se divide en dos partes: el valor SIFS (Short InterFrame Space) y el valor de la duración del paquete. El valor SIFS es el tiempo mínimo que un dispositivo debe esperar antes de transmitir su paquete de datos. La duración del paquete es el tiempo que se necesita para transmitir el paquete completo. El cálculo exacto de la duración del paquete depende de varios factores, como la tasa de transmisión, el tamaño del paquete, la longitud de la dirección de destino y la configuración de la red. Sin embargo, en general, la duración del paquete se puede calcular utilizando la siguiente fórmula: Duración del paquete = (tamaño del paquete + dirección de destino + dirección de origen + CRC) / tasa de transmisión Donde la dirección de destino y la dirección de origen son las direcciones MAC de los dispositivos que envían y reciben los datos, y CRC es un código de detección de errores utilizado para garantizar la integridad de los datos transmitidos. En resumen, el campo de 'duration' en un frame 802.11 se utiliza para coordinar la transmisión de paquetes de datos en una red inalámbrica y se calcula en función de la tasa de transmisión y el tamaño del paquete de datos.         == La cantidad de microsegundos (μs) considerados buenos en una transmisión WiFi depende de varios factores, incluyendo la modulación utilizada, el tamaño del paquete y la distancia entre los dispositivos de la red. En general, cuanto más alta sea la tasa de transmisión (modulación), menor será la duración del paquete y más rápido se transmitirán los datos. A modo de ejemplo, para la modulación 802.11n, que es una de las más comunes en las redes WiFi actuales, la duración típica del paquete para un tamaño de paquete de 1500 bytes es de alrededor de 5.5 μs a una tasa de transmisión de 130 Mbps, y de alrededor de 11 μs a una tasa de transmisión de 65 Mbps. Sin embargo, cabe destacar que la duración 'buena' de una transmisión WiFi no solo depende de la tasa de transmisión, sino también de la calidad de la señal y la presencia de interferencias o ruido en el canal de transmisión. Por lo tanto, es difícil establecer un valor absoluto de microsegundos para una transmisión WiFi 'buena', ya que puede variar dependiendo de las condiciones específicas de la red y la transmisión. =="



##################################################
#
#    802.11 - RETRY & ERRORS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //802.11 Wireless / WiFi    //802.11: Retry & Errors        //WiFi Retransmissions ___ ALL!!!",                                 "wlan.fc.retry ==1",                             "Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //802.11 Wireless / WiFi    //802.11: Retry & Errors        //WiFi Retransmissions ___ From: STA -->> To: AP  | (Upload)",      "wlan.fc.retry ==1 && wlan.fc.tods ==1",         "Del Cliente hacia el AP _________ STA -->> AP"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //802.11 Wireless / WiFi    //802.11: Retry & Errors        //WiFi Retransmissions ___ From: AP  -->> To: STA | (Download)",    "wlan.fc.retry ==1 && wlan.fc.fromds ==1",       "Del AP hacia el Cliente _________ AP  -->> STA"

##################################################
#
#    Search for Devices
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //802.11 Wireless / WiFi    //802.11: Device Finder          //Ruckus Access Points",                   "wlan.tag.number == 221",             "Busca Ruckus APs"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //802.11 Wireless / WiFi    //802.11: Device Finder          //Rocku TV",            "wps.primary_device_type.category == 0x0007 || wps.vendor_id == 14122",             "Busca las teles de shit"






















##################################################
#    
#    ██████╗ ██████╗  ██████╗ ████████╗ ██████╗  ██████╗ ██████╗ ██╗     ███████╗
#    ██╔══██╗██╔══██╗██╔═══██╗╚══██╔══╝██╔═══██╗██╔════╝██╔═══██╗██║     ██╔════╝
#    ██████╔╝██████╔╝██║   ██║   ██║   ██║   ██║██║     ██║   ██║██║     ███████╗
#    ██╔═══╝ ██╔══██╗██║   ██║   ██║   ██║   ██║██║     ██║   ██║██║     ╚════██║
#    ██║     ██║  ██║╚██████╔╝   ██║   ╚██████╔╝╚██████╗╚██████╔╝███████╗███████║
#    ╚═╝     ╚═╝  ╚═╝ ╚═════╝    ╚═╝    ╚═════╝  ╚═════╝ ╚═════╝ ╚══════╝╚══════╝                                                                    
#
##################################################   


##################################################
#
#    TCP 
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Ports and Protocols    //TCP    //All TCP Packets","tcp","Filtra todos los paquetes TCP"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Ports and Protocols    //TCP    //TCP SYNs","tcp.flags.syn==1","Filtra solo TCP SYN"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Ports and Protocols    //TCP    //TCP FINs","tcp.flags.fin==1","Filtra solo TCP FINs (Marca el final de una conversacion TCP)"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Ports and Protocols    //TCP    //TCP Retransmissions","tcp.analysis.retransmission","Paquetes sosp#   sos de ser retransmisiones TCP"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Ports and Protocols    //TCP    //TCP Errors","tcp.analysis.flags","TCP Errors Flag (Ojo! No siempre son errores necesariamente, tambien pueden ser keep alives!!!)"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Ports and Protocols    //TCP    //TCP Ports (Various at same time)","tcp.port in {80,443,8080}","usand IN | OJO!!! EN VERSIONES ANTERIORES ES ESPACIO, EN NUEVAS"

 
































#######################################################################
#    
#    ███╗   ██╗███╗   ███╗ █████╗ ██████╗ 
#    ████╗  ██║████╗ ████║██╔══██╗██╔══██╗
#    ██╔██╗ ██║██╔████╔██║███████║██████╔╝
#    ██║╚██╗██║██║╚██╔╝██║██╔══██║██╔═══╝ 
#    ██║ ╚████║██║ ╚═╝ ██║██║  ██║██║     
#    ╚═╝  ╚═══╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝                                                                                               
#
#######################################################################   

##################################################
#
#    NMAP - BASIC SCAN 
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Scan Ports (Generic Scan / Default): _____ nmap scanme.nmap.org",                                     "nmap scanme.nmap.org",                                                                                              "nmap scanme.nmap.org \n \n Busca con el comando más sencillo de NMAP los puertos abiertos de 'scanme.nmap.org' \n \n Los pasos que realiza son los siguientes: \n \n 1. Primero resuelve con un DNS la dirección 'scanme.nmap.org' (45.33.32.156) Esta es la IP a la que agregará los puertos para el scan (pe. 45.33.32.156:445) \n 2. El Scan lanza TCP SYN a cada puerto (Primer paso de TCP Handshake), buscando una respuesta del Socket destino con un SYN+ACK (Segundo paso del TCP Handshake). \n 3. En caso de estar cerrado el destino responde con TCP RST (aunque también puede estar filtrado). \n \n Este comando se usa para los siguientes ejemplos de filtros. \n \n FASES DE UN SCAN DE NMAP: \n \n https://nmap.org/book/nmap-phases.html \n"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Ports Search by NMAP (SYNs without SYN+ACK)",                                                         "tcp.flags.syn==1 && tcp.flags.ack==0 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)",        "nmap scanme.nmap.org \n \n En este ejemplo (comando básico) NMAP buscó los primeros 1000 puertos, mismos que se filtrarán con este comando (pueden haber retransmisiones TCP que se eliminan, pero se pueden visualizar si se quita la última sección del filtro) \n \n El filtro de Wireshark 'tcp.flags.syn==1 && tcp.flags.ack==0' se utiliza para capturar paquetes que contienen la señal SYN (synchronize) establecida en la cabecera de TCP, pero no incluyen la señal ACK (acknowledgment) establecida. \n \n En términos simples, este filtro se utiliza para capturar los paquetes de la fase de escaneo 'SYN Scan' de Nmap. \n \n En un Scan de NMAP usando 'SYN Scan', Nmap envía una solicitud SYN a cada puerto en un rango de puertos objetivo. Si un puerto está abierto, el servidor responderá con un paquete SYN-ACK (sincronización-acknowledgment). Si el puerto está cerrado, el servidor responderá con un paquete RST (restablecer). Nmap utiliza esta técnica para determinar qué puertos están abiertos y disponibles para su uso. \n \n Con el filtro 'tcp.flags.syn==1 && tcp.flags.ack==0', Wireshark captura todos los paquetes de solicitud SYN que se envían a los puertos objetivo, pero no captura los paquetes SYN-ACK que responden. Por lo tanto, los paquetes capturados con este filtro indican los puertos que Nmap está escaneando y pueden ayudar a identificar la dirección IP del objetivo y los puertos que están abiertos o cerrados en el sistema de destino. \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Port STATE: Open ----->>> Destination Server Responses (SYN+ACK)",                                    "tcp.flags.syn==0 && tcp.flags.ack==1 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)",        "nmap scanme.nmap.org \n \n En este ejemplo (comando básico) NMAP buscó los primeros 1000 puertos, este comando busca las posibles respuestas de algún puerto abierto (pueden haber retransmisiones TCP que se eliminan, pero se pueden visualizar si se quita la última sección del filtro) \n \n El filtro de Wireshark 'tcp.flags.syn==0 && tcp.flags.ack==1' se utiliza para capturar paquetes que NO contienen la señal SYN (synchronize) establecida en la cabecera de TCP, pero SI incluyen la señal ACK (acknowledgment) establecida (Es decir, la respuesta desde el servidor y su puerto abierto). \n \n En términos simples, este filtro se utiliza para capturar los paquetes de la fase respuesta de escaneo 'SYN Scan' de Nmap. \n \n En un Scan de NMAP usando 'SYN Scan', Nmap envía una solicitud SYN a cada puerto en un rango de puertos objetivo. Si un puerto está abierto, el servidor responderá con un paquete SYN-ACK (sincronización-acknowledgment). Si el puerto está cerrado, el servidor responderá con un paquete RST (restablecer). Nmap utiliza esta técnica para determinar qué puertos están abiertos y disponibles para su uso. \n "
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Port STATE: Filtered --->>> Destination Server no RST Response (SYN | no SYN/ACK & NO RST/ACK)",      "tcp.flags.syn==1 && tcp.flags.ack==0 && tcp.flags.reset == 1 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)",        "nmap scanme.nmap.org \n \n Un puerto filtrado NO responde con un RST (reset) como lo haría un servidor con un puerto cerrado. \n Al no recibir ni una respuesta SYN/ACK, ni un RST (puerto cerrado), es muy posible sea filtrado por un firewall y a propósito no conteste el SYN."
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Port STATE: Closed --->>> Destination Server no Response (SYN | no SYN/ACK & then RST/ACK)",          "tcp.flags.syn==0 && tcp.flags.ack==1 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)",        "nmap scanme.nmap.org \n \n Un servidor en linea pero con un puerto en específico cerrado, por default contestará con un RST en caso de tener cerrado el puerto, \n a diferencia de un puerto abierto que contesta con un SYN/ACK para seguir el proceso de 3-way-handshake."

##################################################
#
#    NMAP - HOW TO SCAN NETWORK/SUBNET, URL ADDRESS OR HOST 
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //Network or Host Target(s)       //Scan All Ports (0 - 65535)",                                                                                 "nmap -p 10.scanme.nmap.org",                                                                                       "There are a total of 65536 TCP ports. The ports are numbered 0-65535. Although port 0 is reserved and unavailable for direct use, it still exists and can be counted in the total number of port \n"

                                                                             

###########################################################################################################################
#                                                                  
#    NMAP - PORTS & SERVICES: SELECT ALL PORTS, SPECIFIC PORTS, EXCLUDE PORTS, PORT RANGES, PORT SCAN ORDER & UDP PORTS
#
###########################################################################################################################

# 13 (BE SPECIFIC)

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //Network or Host Target(s)       //Scan All Ports (0 - 65535)",                                                                                 "nmap -p 10.scanme.nmap.org",                                                                                       "There are a total of 65536 TCP ports. The ports are numbered 0-65535. Although port 0 is reserved and unavailable for direct use, it still exists and can be counted in the total number of port \n"
"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //NMAP (NetSec & Hacking)   //Network or Host Target(s)       //Scan specific ports",   "nmap -p 10.scanme.nmap.org",                                                                                              "nmap scanme.nmap.org \n \n Busca con el comando más sencillo de NMAP los puertos abiertos de 'scanme.nmap.org' \n \n Los pasos que realiza son los siguientes: \n \n 1. Primero resuelve con un DNS la dirección 'scanme.nmap.org' (45.33.32.156) Esta es la IP a la que agregará los puertos para el scan (pe. 45.33.32.156:445) \n 2. El Scan lanza TCP SYN a cada puerto (Primer paso de TCP Handshake), buscando una respuesta del Socket destino con un SYN+ACK (Segundo paso del TCP Handshake). \n 3. En caso de estar cerrado el destino responde con TCP RST (aunque también puede estar filtrado). \n \n Este comando se usa para los siguientes ejemplos de filtros. \n \n FASES DE UN SCAN DE NMAP: \n \n https://nmap.org/book/nmap-phases.html \n" 

##################################################
#
#    NMAP - TOP 5 SCANS 
#
##################################################

# 14

##################################################
#
#    NMAP - TOP 5 SCANS 
#
##################################################

# 14


##################################################
#
#    802.11 WIFI - SOURCE & DESTINATION 
#
##################################################




##################################################
#
#    fZ3R0 HEADER
#
##################################################


"TRUE","(((\xc2\xaf`\xc2\xb7._.\xc2\xb7\xc2\xb7\xc2\xb8.-~*\xc2\xb4\xc2\xa8\xc2\xaf\xc2\xa8`*\xc2\xb7~-.,-(_\xf0\x9f\x92\x80  Fz3\xef\xb8\x8fr0 \xf0\x9f\x92\x80 || \xf0\x9f\xa6\x88  \xf0\x9f\x85\x91\xf0\x9f\x85\x9b\xf0\x9f\x85\x90\xf0\x9f\x85\x92\xf0\x9f\x85\x9a \xf0\x9f\x85\xa2\xf0\x9f\x85\x97\xf0\x9f\x85\x90\xf0\x9f\x85\xa1\xf0\x9f\x85\x9a  v3.7 \xf0\x9f\xa6\x88 << || >>  \xf0\x9f\x98\x88 Twitter: @Fz3r0_OPs || \xf0\x9f\x98\x88 github.com/Fz3r0 || \xf0\x9f\x98\x88 youtube/@Fz3r0_OPs || \xf0\x9f\xa6\x85 H#    en Mexico_)-,.-~*\xc2\xb4\xc2\xa8\xc2\xaf\xc2\xa8`*\xc2\xb7~-.\xc2\xb8\xc2\xb7\xc2\xb7._.\xc2\xb7\xc2\xb4\xc2\xaf))) 

//Blue Team//nmap//nmap SYN scan","tcp.window_size_value == 1024 and tcp.flags.syn == 1","99% De seguridad que sea un scan de nmap, debido al default 1024 y la flag del syn. No visto en mundos reales "




"TRUE","Ports//Puerto TCP","tcp.port == 80","Buscar puerto 80 (http) | cambiar por el que quieras! "
"TRUE","Ports//Puerto UDP","udp.port == 53","Buscar puerto 53 (http) | cambiar por el que quieras! "
"TRUE","Ports//TCP src","tcp.srcport == 80",""
"TRUE","Ports//TCP dst","tcp.dstport == 80",""

##################################################
#
#    HTTP / HTTPS
#
##################################################

"TRUE"," >>>>  🦈💀 START BLACK SHARK 💀🦈  <<<< //Ports & Protocols//HTTP & HTTPS (Port 80, 8080)//HTTP - TCP Port 80 (Buscar HTTP por puerto 80)","tcp.port == 80","Es mejor buscar por puertos, HTTP solamente muestra los paquetes que no traen payload y  yo quiero ver todo, ack, y todo el transporte"

"TRUE","HTTP//HTTP response 200","http.response.code == 200","HTTP response 200"
"TRUE","HTTP//HTTP get","http.request.method == \x22GET\x22",""
"TRUE","HTTP//HTTP Post","http.request.method == \x22POST\x22",""

##################################################
#
#    DNS
#
##################################################

"TRUE","DNS//DNS Response","dns.flags.response == 1",""
"TRUE","DNS//DNS \x22A\x22 records","dns.qry.type == 1",""
"TRUE","Protocols//DNS//DNS Request","dns.flags.response == 0",""











"TRUE","Search (Matches & Contains)//Contains (case sensitive)","frame contains \x22google\x22","cualquier cosa dentro del frame que contenga la palabra \x22google\x22 "
"TRUE","Search (Matches & Contains)//Matches  (no case sensitive)","frame matches \x22server\x22","Igual a Contains pero sin case sensitive (peronalmente prefiero usar este)"
"TRUE","Search (Matches & Contains)//Buscar PC Windows (default)","frame matches \x22desktop\x22","Las m\xc3\xa1quinas Windows por default traen el string \x22desktop\x22"
"TRUE","Search (Matches & Contains)//Buscar Servicio Google","frame matches \x22google\x22",""


"TRUE","802.11//WiFI RSSI>=80","radiotap.dbm_antsignal >= -80","busca RSSI malos"
"TRUE","802.11//WiFi DataRate < 6mbps","radiotap.datarate <= 6","Busca data rates menores a 6mbps ;)"
"TRUE","802.11//WLAN reciever","wlan.ra","Receptor en la WLAN - ejemplo = wlan.ra == f0:f0:f0:f0:f0:f0"
"TRUE","802.11//WLAN Source Address","wlan.sa","Receptor en la WLAN - ejemplo = wlan.sa == f0:f0:f0:f0:f0:f0"
"TRUE","802.11//WLAN Retransmission","wlan.fc.retry == 1","WLAN Retransmission Ruckus filter style ||| usar con:<<  &&wlan.bssid==f0:bs:si:d0:f0 >>:para isolar el puro BSSID en uso >:D |||"
"TRUE","802.11//Management Frames//WLAN Management Frames","wlan.fc.type == 0","Aqui se pueden ver las retransmisiones u otros problemas de managmenet"
"TRUE","802.11//WLAN Beacon Frames"," wlan[0] != 0x80",""
"TRUE","802.11//WLAN Beacon Frames"," wlan[0] == 0x80","El identificador est\xc3\xa1 en \x22frame control\x22 y es valor hexadecimal "
"TRUE","802.11//WLAN Authentication Frame"," wlan[0] == 0xb0",""
"TRUE","802.11//WLAN only beacon & probes","wlan.fc.type_subtype==0x08 || wlan.fc.type_subtype==0x05","only beacon frames  & probe responses"
"TRUE","802.11//WLAN filter MAC","wlan.addr == 00:16:bc:3d:aa:57","Filter MAC from X or Y WLAN"
"TRUE","TCP//TCP Reset","tcp.flags.reset==1",""
"TRUE","TCP//TCP Port VARIOS","tcp.port in {80,8080,22}",""
"TRUE","TCP//TCP Port: desde @ hasta","tcp.port in {47640..47660}",""
"TRUE","DNS Response","dns.flags.response == 1",""
"TRUE","DNS Request","dns.flags.response == 0",""
"TRUE","WLAN Association Request","wlan.fc.type_subtype == 0 ",""
"TRUE","WLAN Association Response","wlan.fc.type_subtype == 1",""
"TRUE","WLAN Transmitter","wlan.ta","== MAC del AP"
"TRUE","Broadcast Packets","eth.dst.ig == 1",""
"TRUE","NO una VLAN","!vlan.id == 34","en caso de existir 802.1q"
"TRUE","Location Search","ip.geoip.dst_city == \x22Toronto\x22","Bajar las DB de GeoIP"
"TRUE","DNS time response","dns.time > 0.100","Filtrar el tiempo de respues del DNS menor a... (0.100 en este caso) | HINT! agrega la columna y filtra por tiempos de DNS ;)"
"TRUE","IP ALL","ip.addr == 192.168.1.100","puede ser a host: 192.168.1.100 | puede ser a subnet puede ser a host: 192.168.1.0/24"
"TRUE","IP Source","ip.src == 192.168.1.100","Origen de la IP"
"TRUE","IP Dest","ip.dst == 192.168.1.100","IP de destino"

"TRUE","TTL menor a...","ip.ttl < 10","TTL menor a 10"
"TRUE","TCP//TCP checksum error!","tcp.checksum_bad.expert","Checksums malos | HINT: esto se puede obtener seleccionadno el protcolo, boton der#    y PROTOCOL PREFERENCES (default apagado para no generar errores de falso-positivo)"
"TRUE","Random MAC Address","wlan.addr[0] & 0x03 == 2","Wireshark 4.0 introduces bitwise operator capable of masking each bit. So, use wlan.addr[0] & 0x03 = 2 as a display filter to show RFC 7042 random MAC addresses. "
"TRUE","HTTP Method = GET","http.request.method == \x22GET\x22",""
"TRUE","Multicast/Broadcast","eth.dst.ig == 1","Filtra el destino hacia Multicast o bradcast"

"TRUE","","",""







