# This file is automatically generated, DO NOT MODIFY.
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //Equal _______________ == , eq","ip.addr == 192.168.0.1","El valor 'A' debe ser IGUAL al valor 'B'. \x0a \x0a Por ejemplo: 'La IPv4 debe ser igual a 192.268.0.1' \x0a \x0a Valor-A (IPv4) == Valor-B (192.268.0.1) \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //Not Equal: __________ != , ne","ip.addr != 192.168.0.1","El valor 'A' debe ser DIFERENTE al valor 'B'. \x0a \x0a Por ejemplo: 'La IPv4 debe ser diferente a 192.268.0.1' \x0a \x0a Valor-A (IPv4) != Valor-B (192.268.0.1) \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //Greater Than: _______ > , gt","all tcp.port > 1024","El valor 'A' debe ser MAYOR al valor 'B'. \x0a \x0a Por ejemplo: 'El Puerto TCP debe ser mayor que 1024' \x0a \x0a Valor-A (TCP Port) > Valor-B (1024) \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //Less Than: __________ < , lt","all tcp.port < 1024","El valor 'A' debe ser MENOR al valor 'B'. \x0a \x0a Por ejemplo: 'El Puerto TCP debe ser menor que 1024' \x0a \x0a Valor-A (TCP Port) < Valor-B (1024) \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //Greater/Equal to: ___ >= , ge","all tcp.port >= 1024","valor-A >= valor-B"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //Greater/Equal to: ___ <= , le","all tcp.port <= 1024","valor-A <= valor-B"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //All Equal: __________ === ","ip.src === 10.0.0.5","Si es mas de uno, que todos sean igual a... (se necesitan varios valores)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Basic Operators    //At least 1 Equal ____ !== ","ip.src !== 10.0.0.5","Si es mas de uno, que aunque sea uno sea diferente a... no mostrarlo"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Logical Operators    //And: ______________ and , &&","ip.addr == 192.168.0.1 && ip.addr == 192.168.0.2","TODAS las condiciones deben hacer match. \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Logical Operators    //Or: _______________ or  , ||","ip.addr == 192.168.0.1 || ip.addr == 192.168.0.2","CUALQUIERA de las condiciones se debe cumplir. \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Logical Operators    //XOr: ______________ xor , ^^","ip.addr == 192.168.0.1 ^^ ip.addr == 192.168.0.2","SOLO UNA de las condiciones se puede cumplir \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Logical Operators    //Not: ______________ not , !","!ICMP","No mostrar protocolo ICMP"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Fz3r0 Combos    //NO STP Protocol & IP Address equal to...","ip.addr == 192.168.56.102 && !stp","Mostrar todo el tr\xc3\xa1fico de X IPv4, pero sin mostrar tr\xc3\xa1fico STP. \x0a Se puede usar tanto '!' o 'not' antes del protocolo o lo que se quiera negar. \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Fz3r0 Combos    //All TCP packets but NO ICMP","tcp && !icmp","En esta condici\xc3\xb3n se muestran todos los Paquetes TCP, pero se exluye al ICMP. \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Operators    //Fz3r0 Combos    //NO Various Types (Grouped at same time)","!(eth.dst == ff:ff:ff:ff:ff:ff || arp or lldp or stp)","No broadcast +  no arp, no lldp, stp"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //Filter only IPv4 packets","ip","Filtra \xc3\xbanicamente los paquetes con tr\xc3\xa1fico IPv4"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //Full Subnet Search by IPv4","ip.addr == 192.168.1.0./24","Filtra todas las IPs dentro de esa Subnet / Network ID"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //IPv4 Address (Any)","ip.addr == 192.168.0.1","Busca cualquier IP en todo el tr\xc3\xa1fico, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //IPv4 Address (Source)","ip.src == 192.168.0.1","Busca el IP Source que sea igual a..."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //IPv4 Address (Destination)","ip.dst == 192.168.0.254","Busca el IP Destination que sea igual a..."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //IPv4 Addresses (by Range)","ip.addr >= 10.10.50.1 && ip.addr <= 10.10.50.100","Busca entre un rango de 2 IPs diferentes"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //IPv4 Addresses (Multiple matching &&)","ip.addr == 10.10.50.1 && ip.addr == 10.10.50.1","Busca 2 IPs en espec\xc3\xadfico (Sin importar el sentido de la conversaci\xc3\xb3n)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //IPv4 Address    //IPv4 Addresses (Multiple one or another ||)","ip.addr == 10.10.50.1 or ip.addr == 10.10.50.1","Busca cualquiera de 2 IPs diferentes"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //MAC Address    //MAC Address (Any)","eth.addr == 50:4e:dc:90:2e:b8","Busca cualquier MAC en todo el tr\xc3\xa1fico, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //MAC Address    //MAC Address (Source)","src.addr == 50:4e:dc:90:2e:b8","Busca cualquier MAC en todo el tr\xc3\xa1fico, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //MAC Address    //MAC Address (Destination)","dst.addr == 50:4e:dc:90:2e:b8","Busca cualquier MAC en todo el tr\xc3\xa1fico, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //MAC Address    //MAC Address (First 3 HEX)","eth.addr[0:3] == 50:4e:dc","Busca cualquier MAC en todo el tr\xc3\xa1fico, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //MAC Address    //MAC Address (Last 2 HEX)","eth.addr[4:2] == 2e:b8","Busca cualquier MAC en todo el tr\xc3\xa1fico, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //Ports (TCP/UDP)    //TCP Port (Any)","tcp.port == 80","Busca cualquier Puerto 80, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //Ports (TCP/UDP)    //TCP Port (Source)","tcp.srcport == 80","Muestra el Source con Puerto 80"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //Ports (TCP/UDP)    //TCP Port (Destination)","tcp.dstport == 80",""
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //Ports (TCP/UDP)    //UDP Port (Any)","udp.port == 53","Busca cualquier Puerto 80, sea Source o Destination"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //Ports (TCP/UDP)    //UDP Port (Source)","udp.srcport == 53","Muestra el Source con Puerto 80"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //Ports (TCP/UDP)    //UDP Port (Destination)","udp.dstport == 53",""
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //Any WLAN Device MAC Address __ (STA/AP || TA/RA/SA/)","wlan.addr == 00:0d:93:82:36:3a","(Ej. En))"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //Access Point | BSSID _______________ (AP)","wlan.bssid == fc:5c:45:8d:e9:b9","Filtra cualquier Estaci\xc3\xb3n (STA) dentro de la red WLAN. (Ej. Un iphone o una laptop)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //Station (WLAN Client) ______________ (STA)","wlan.staa == 00:0d:93:82:36:3a","Filtra cualquier Estaci\xc3\xb3n (STA) dentro de la red WLAN. (Ej. Un iphone o una laptop)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //Transmitter Address ________________ (TA)","wlan.ta == fc:5c:45:8d:e9:b9","(Ej. En un Beacon, ser\xc3\xada el AP | En un ARP, puede ser AP o STA | En un ICMP, puede ser AP o STA)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //Receiver Address ___________________ (RA)","wlan.ra == ff:ff:ff:ff:ff:ff","(Ej. En un Beacon, ser\xc3\xada el TODO el aire (SSID) | En un ARP, puede ser TODO el aire (si viene del AP) o una MAC (si viene de la STA) | En un ICMP, puede ser AP o STA)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //Source Address _____________________ (SA)","wlan.sa == fc:5c:45:8d:e9:b9","Filtra cualquier Cliente WLAN con la MAC..."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //Destionation Address _______________ (DA)","wlan.da == ff:ff:ff:ff:ff:ff","(Ej. En un Beacon, ser\xc3\xada el TODO el aire (SSID) | En un ARP, puede ser TODO el aire (si viene del AP) o una MAC (si viene de la STA) | En un ICMP, puede ser AP o STA)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Source & Destination    //802.11 WiFi       //SSID (WLAN ID) _____________________ (SSID)","wlan.mgt.ssid == 'Guest_SSID'","Filtra el SSID"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Data Transmission Type                      //Unicast","eth.dst.ig == 0","Filtra TODO el tr\xc3\xa1fico Unicast. \x0a \x0a La transmisi\xc3\xb3n unicast es una conexi\xc3\xb3n punto a punto (P2P Point-to-Point) entre dos dispositivos en una red. \x0a En este tipo de transmisi\xc3\xb3n, un dispositivo env\xc3\xada datos a un \xc3\xbanico destinatario. \x0a \x0a Por ejemplo, cuando env\xc3\xadas un correo electr\xc3\xb3nico a alguien, la conexi\xc3\xb3n entre tu dispositivo y el servidor de correo es unicast. \x0a \x0a Ejemplos de Protocolos Unicast: \x0a \x0a DNS, DHCP, Telnet, SSH, SNMP, RTP, SIP, POP3, IMAP, SMB. \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Data Transmission Type                      //Broadcast","eth.addr == ff:ff:ff:ff:ff:ff","Filtra TODO el tr\xc3\xa1fico Broadcast. \x0a \x0a La transmisi\xc3\xb3n broadcast implica el env\xc3\xado de datos a todos los dispositivos en una red. En este tipo de transmisi\xc3\xb3n, un dispositivo env\xc3\xada datos a todos los dispositivos conectados a la red. Por ejemplo, cuando env\xc3\xadas un mensaje a todos los usuarios de una red social, la conexi\xc3\xb3n entre tu dispositivo y la red social es broadcast. \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Data Transmission Type                      //Multicast (opci\xc3\xb3n 1)","eth.dst.ig == 1","The IG bit distinguishes whether the MAC address is an individual or group (hence IG) address. In other words, an IG bit of 0 indicates that this is a unicast MAC address, an IG bit of 1 indicates a multicast or broadcast address."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Data Transmission Type                      //Multicast (opci\xc3\xb3n 2)","(eth.dst[0]&1) && !eth.dst==ff:ff:ff:ff:ff:ff ","(eth.dst[0]&1) will filter both multicast and broadcast. So, from this exclude broadcast. "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//All Around//Service Ports: Well Known Ports (TCP+UDP 0-1023)","tcp.port <= 1023 && udp.port <= 1023","Busca todos los puertos igual o menor a 1023 (well known ports)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//All Around//Service Ports: Registered Ports (TCP+UDP 1024-49151)","tcp.port >= 1024 && tcp.port <= 49151","Busca todos los puertos mayor o igual a 1024, pero menor o igual a 49151 (Registered Ports)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//All Around//Service Ports: Dynamic / Ephimeral (TCP+UDP 49152-65535)","tcp.port <= 49152","Busca todos los puertos igual o mayor a 49152 hasta 65535 (Dynamic / Ephimeral)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//TCP//All TCP Packets","tcp","Filtra todos los paquetes TCP"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//TCP//TCP SYNs","tcp.flags.syn==1","Filtra solo TCP SYN"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//TCP//TCP FINs","tcp.flags.fin==1","Filtra solo TCP FINs (Marca el final de una conversacion TCP)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//TCP//TCP Retransmissions","tcp.analysis.retransmission","Paquetes sosp#   sos de ser retransmisiones TCP"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//TCP//TCP Errors","tcp.analysis.flags","TCP Errors Flag (Ojo! No siempre son errores necesariamente, tambien pueden ser keep alives!!!)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//TCP//TCP Ports (Various at same time)","tcp.port in {80,443,8080}","usand IN | OJO!!! EN VERSIONES ANTERIORES ES ESPACIO, EN NUEVAS"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //Any WLAN MAC Address _______ (STA/AP || TA/RA/SA/)","wlan.addr == 00:0d:93:82:36:3a","(Ej. En))"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //Access Point | BSSID _______________ (AP)","wlan.bssid == fc:5c:45:8d:e9:b9","Filtra cualquier Estaci\xc3\xb3n (STA) dentro de la red WLAN. (Ej. Un iphone o una laptop)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //Station (WLAN Client) ______________ (STA)","wlan.staa == 00:0d:93:82:36:3a","Filtra cualquier Estaci\xc3\xb3n (STA) dentro de la red WLAN. (Ej. Un iphone o una laptop)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //Transmitter Address ________________ (TA)","wlan.ta == fc:5c:45:8d:e9:b9","(Ej. En un Beacon, ser\xc3\xada el AP | En un ARP, puede ser AP o STA | En un ICMP, puede ser AP o STA)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //Receiver Address ___________________ (RA)","wlan.ra == ff:ff:ff:ff:ff:ff","(Ej. En un Beacon, ser\xc3\xada el TODO el aire (SSID) | En un ARP, puede ser TODO el aire (si viene del AP) o una MAC (si viene de la STA) | En un ICMP, puede ser AP o STA)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //Source Address _____________________ (SA)","wlan.sa == fc:5c:45:8d:e9:b9","Filtra cualquier Cliente WLAN con la MAC..."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //Destionation Address _______________ (DA)","wlan.da == ff:ff:ff:ff:ff:ff","(Ej. En un Beacon, ser\xc3\xada el TODO el aire (SSID) | En un ARP, puede ser TODO el aire (si viene del AP) o una MAC (si viene de la STA) | En un ICMP, puede ser AP o STA)"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //Source & Destination         //SSID (WLAN ID) _____________________ (SSID)","wlan.mgt.ssid == 'Guest_SSID'","Filtra el SSID"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //ALL Management Frames","wlan.fc.type == 0","Se utilizan para establecer, mantener y desmontar una conexion entre un Cliente (STA) y un AP, as\xc3\xad como para transmitir informacion de Control y Configuracion de la red."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Association Requests","wlan.fc.type_subtype == 0","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Association Response","wlan.fc.type_subtype == 1","Enviado por el AP hacia el CLiente (STA) que ha enviado previamente un 'Association Request' para unirse a la red inal\xc3\xa1mbrica. El AP responde al cliente indicando si la solicitud de asociaci\xc3\xb3n se ha aceptado o rechazado, y proporciona detalles de configuraci\xc3\xb3n adicionales para la conexi\xc3\xb3n si la asociaci\xc3\xb3n se acepta."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Re-Association Request","wlan.fc.type_subtype == 2","Enviado por el Cliente (STA) a un nuevo AP de la misma red. Contiene informaci\xc3\xb3n detallada de un Cliente (STA) que ya est\xc3\xa1 asociado a una red WiFi y que desea cambiar su asociaci\xc3\xb3n a otro AP en la misma red inal\xc3\xa1mbrica (hacer roaming a otro AP). Este Frame se utiliza com\xc3\xbanmente en redes inal\xc3\xa1mbricas empresariales donde hay varios APs en la misma red."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Re-Association Response","wlan.fc.type_subtype == 3","Enviado por el nuevo AP en respuesta al 'Re-Association Request' del cliente (STA). Si el nuevo AP acepta la solicitud de asociaci\xc3\xb3n del cliente, el Frame incluir\xc3\xa1 detalles de configuraci\xc3\xb3n adicionales para la conexi\xc3\xb3n. Este Frame es muy importante para que el CLiente (STA) pueda hacer roaming sin tener interrupciones en la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Probe Requests","wlan.fc.type_subtype == 4","Enviado por el Cliente (STA) a manera de Broadcast (hacia toda la red/aire) para solicitar/buscar informaci\xc3\xb3n de una o varias redes inal\xc3\xa1mbricas a su alrededor. El Frame puede incluir informaci\xc3\xb3n como la identificaci\xc3\xb3n de la red (SSID) o el rango de frecuencia de la banda inal\xc3\xa1mbrica en la que se busca una red. Los APs y otros dispositivos en la red WiFi que reciben el 'Probe Request' pueden responder con un 'Probe Response' que incluye detalles de la red WiFi, como su nombre, el tipo de seguridad utilizado, el canal y otras caracter\xc3\xadsticas de configuraci\xc3\xb3n. Esto permite que el cliente encuentre y se conecte a la red WiFi deseada."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Probe Responses","wlan.fc.type_subtype == 5","Filtra TODOS los Re-Association Response de 802.11 Wireless / WiFi"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Beacons","wlan.fc.type_subtype == 8","Filtra TODOS los Re-Association Response de 802.11 Wireless / WiFi"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //ATIMs","wlan.fc.type_subtype == 9","(Announcement Traffic Indication Map) se utiliza para gestionar el tr\xc3\xa1fico de datos Multicast en la red WiFi. Enviado por un AP hacia un cliente (STA) que ha transmitido datos Multicast al grupo de estaciones asociadas (STAs/Clientes) a ese mismo AP. El Frame contiene informaci\xc3\xb3n sobre cu\xc3\xa1ndo y c\xc3\xb3mo se transmitir\xc3\xa1n los datos Multicast a los clientes asociados. "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Disassosiations","wlan.fc.type_subtype == 10","Filtra TODOS los Re-Association Response de 802.11 Wireless / WiFi"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Authentications","wlan.fc.type_subtype == 11","Filtra TODOS los Re-Association Response de 802.11 Wireless / WiFi"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Deauthentications","wlan.fc.type_subtype == 12","Filtra TODOS los Re-Association Response de 802.11 Wireless / WiFi"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Management Frames    //Action","wlan.fc.type_subtype == 13","Puede ser enviado por cualquier dispositivo en la red WiFi, como un Cliente (STA) o un AP, y puede contener varios tipos de mensajes de control, como el inicio o finalizaci\xc3\xb3n de una transmisi\xc3\xb3n de datos, el env\xc3\xado de informaci\xc3\xb3n de diagn\xc3\xb3stico, la solicitud de medidas de calidad de se\xc3\xb1al, o la configuraci\xc3\xb3n de par\xc3\xa1metros de red. Los 'Action Frames' se utilizan a menudo para mejorar el rendimiento y la eficiencia de la red inal\xc3\xa1mbrica, permitiendo una mejor coordinaci\xc3\xb3n y sincronizaci\xc3\xb3n entre los dispositivos. "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //ALL Control Frames","wlan.fc.type == 1","Se utilizan para establecer, mantener y desmontar una conexion entre un Cliente (STA) y un AP, as\xc3\xad como para transmitir informacion de Control y Configuracion de la red."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //Block ACK Requests","wlan.fc.type_subtype == 24","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //Block ACK","wlan.fc.type_subtype == 25","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //PS-POLLs","wlan.fc.type_subtype == 26","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //RTS (Ready To Send)","wlan.fc.type_subtype == 27","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //CTS (Clear To Send)","wlan.fc.type_subtype == 28","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //ACK","wlan.fc.type_subtype == 29","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //CF-Ends","wlan.fc.type_subtype == 30","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Control Frames       //CF-Ends / CF-ACKs","wlan.fc.type_subtype == 31","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //ALL Data Frames","wlan.fc.type == 2","Se utilizan para establecer, mantener y desmontar una conexion entre un Cliente (STA) y un AP, as\xc3\xad como para transmitir informacion de Control y Configuracion de la red."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //Data Frames","wlan.fc.type_subtype == 32","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //data+cf-ack","wlan.fc.type_subtype == 33","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //data+cf-poll","wlan.fc.type_subtype == 34","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //data+cf-ack + cf-ack","wlan.fc.type_subtype == 35","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //null data","wlan.fc.type_subtype == 36","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //\x09cf-ack","wlan.fc.type_subtype == 37","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //\x09cf-poll","wlan.fc.type_subtype == 38","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //cf-ack + cf-poll","wlan.fc.type_subtype == 39","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //\x09qos data","wlan.fc.type_subtype == 40","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //qos data + cf-ack","wlan.fc.type_subtype == 41","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //qos data + cf-poll","wlan.fc.type_subtype == 42","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //qos data + cf-ack+ cf-poll","wlan.fc.type_subtype == 43","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //qos null","wlan.fc.type_subtype == 44","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //qos cf-poll","wlan.fc.type_subtype == 46","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Data Frames          //qos cf-ack + cf-poll","wlan.fc.type_subtype == 47","Enviado por el Cliente (STA) hacia un AP con el objetivo de unirse a la red y establecer una conexi\xc3\xb3n. Contiene informaci\xc3\xb3n detallada del cliente que desea unirse a una red inal\xc3\xa1mbrica, como la identificaci\xc3\xb3n de la red inal\xc3\xa1mbrica (SSID), las capacidades del cliente, la duraci\xc3\xb3n prevista de la conexi\xc3\xb3n y otros detalles de configuraci\xc3\xb3n de la conexi\xc3\xb3n."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Radio Information    //Duration _____ (\xce\xbcs = SIFs + Duration)","wlan_radio.duration >= 200","La duraci\xc3\xb3n del tiempo que se utilizar\xc3\xa1 para la transmisi\xc3\xb3n del paquete de datos en la red WiFi. Este campo se utiliza para informar a otros dispositivos de la red sobre cu\xc3\xa1nto tiempo deber\xc3\xa1n esperar antes de enviar datos por la misma frecuencia. El valor de 'duration' se calcula en funci\xc3\xb3n de la tasa de transmisi\xc3\xb3n de datos y del tama\xc3\xb1o del paquete de datos. El valor se representa en microsegundos (\xce\xbcs) y se redondea al siguiente valor entero m\xc3\xa1s alto. El valor de 'duration' se divide en dos partes: el valor SIFS (Short InterFrame Space) y el valor de la duraci\xc3\xb3n del paquete. El valor SIFS es el tiempo m\xc3\xadnimo que un dispositivo debe esperar antes de transmitir su paquete de datos. La duraci\xc3\xb3n del paquete es el tiempo que se necesita para transmitir el paquete completo. El c\xc3\xa1lculo exacto de la duraci\xc3\xb3n del paquete depende de varios factores, como la tasa de transmisi\xc3\xb3n, el tama\xc3\xb1o del paquete, la longitud de la direcci\xc3\xb3n de destino y la configuraci\xc3\xb3n de la red. Sin embargo, en general, la duraci\xc3\xb3n del paquete se puede calcular utilizando la siguiente f\xc3\xb3rmula: Duraci\xc3\xb3n del paquete = (tama\xc3\xb1o del paquete + direcci\xc3\xb3n de destino + direcci\xc3\xb3n de origen + CRC) / tasa de transmisi\xc3\xb3n Donde la direcci\xc3\xb3n de destino y la direcci\xc3\xb3n de origen son las direcciones MAC de los dispositivos que env\xc3\xadan y reciben los datos, y CRC es un c\xc3\xb3digo de detecci\xc3\xb3n de errores utilizado para garantizar la integridad de los datos transmitidos. En resumen, el campo de 'duration' en un frame 802.11 se utiliza para coordinar la transmisi\xc3\xb3n de paquetes de datos en una red inal\xc3\xa1mbrica y se calcula en funci\xc3\xb3n de la tasa de transmisi\xc3\xb3n y el tama\xc3\xb1o del paquete de datos.         == La cantidad de microsegundos (\xce\xbcs) considerados buenos en una transmisi\xc3\xb3n WiFi depende de varios factores, incluyendo la modulaci\xc3\xb3n utilizada, el tama\xc3\xb1o del paquete y la distancia entre los dispositivos de la red. En general, cuanto m\xc3\xa1s alta sea la tasa de transmisi\xc3\xb3n (modulaci\xc3\xb3n), menor ser\xc3\xa1 la duraci\xc3\xb3n del paquete y m\xc3\xa1s r\xc3\xa1pido se transmitir\xc3\xa1n los datos. A modo de ejemplo, para la modulaci\xc3\xb3n 802.11n, que es una de las m\xc3\xa1s comunes en las redes WiFi actuales, la duraci\xc3\xb3n t\xc3\xadpica del paquete para un tama\xc3\xb1o de paquete de 1500 bytes es de alrededor de 5.5 \xce\xbcs a una tasa de transmisi\xc3\xb3n de 130 Mbps, y de alrededor de 11 \xce\xbcs a una tasa de transmisi\xc3\xb3n de 65 Mbps. Sin embargo, cabe destacar que la duraci\xc3\xb3n 'buena' de una transmisi\xc3\xb3n WiFi no solo depende de la tasa de transmisi\xc3\xb3n, sino tambi\xc3\xa9n de la calidad de la se\xc3\xb1al y la presencia de interferencias o ruido en el canal de transmisi\xc3\xb3n. Por lo tanto, es dif\xc3\xadcil establecer un valor absoluto de microsegundos para una transmisi\xc3\xb3n WiFi 'buena', ya que puede variar dependiendo de las condiciones espec\xc3\xadficas de la red y la transmisi\xc3\xb3n. =="
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11v DMS Request","wlan.fixed.action_code ==23","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11v DMS Response","wlan.fixed.action_code ==24","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11k Neighbour Request","wlan.rm.action_code ==4","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11k Neighbour Response","wlan.rm.action_code ==5","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11r Auth Request","(wlan.fc.type_subtype==0)&&(wlan.rsn.akms.type==3)","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11r Auth Response","(wlan.fc.type_subtype==1)&&(wlan.tag.number==55)","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11r Re-Association Request","(wlan.fc.type_subtype==2)&&(wlan.tag.number==55)","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11v Re-Association Response","(wlan.fc.type_subtype==3)&&(wlan.tag.number==55)","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11 -  BSS Transition [Steering] (Option 1)","wlan.fixed.action_code==7","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11k/v/r: Roaming & Optimization    //802.11 -  BSS Transition [Steering] (Option 2)","wlan.fixed.action_code==8","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Retry & Errors        //WiFi Retransmissions ___ ALL!!!","wlan.fc.retry ==1","Todos los Retry en el aire WLAN y Channel seleccionado."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Retry & Errors        //WiFi Retransmissions ___ From: STA -->> To: AP  | (Upload)","wlan.fc.retry ==1 && wlan.fc.tods ==1","Del Cliente hacia el AP _________ STA -->> AP"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Retry & Errors        //WiFi Retransmissions ___ From: AP  -->> To: STA | (Download)","wlan.fc.retry ==1 && wlan.fc.fromds ==1","Del AP hacia el Cliente _________ AP  -->> STA"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Wireless Device Finder       //Ruckus Access Points","wlan.tag.number == 221","Busca Ruckus APs"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //802.11 Wireless / WiFi    //802.11: Wireless Device Finder       //Rocku TV","wps.primary_device_type.category == 0x0007 || wps.vendor_id == 14122","Busca las teles de shit"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Scan Ports (Generic Scan / Default): _____ nmap scanme.nmap.org","nmap scanme.nmap.org","nmap scanme.nmap.org \x0a \x0a Busca con el comando m\xc3\xa1s sencillo de NMAP los puertos abiertos de 'scanme.nmap.org' \x0a \x0a Los pasos que realiza son los siguientes: \x0a \x0a 1. Primero resuelve con un DNS la direcci\xc3\xb3n 'scanme.nmap.org' (45.33.32.156) Esta es la IP a la que agregar\xc3\xa1 los puertos para el scan (pe. 45.33.32.156:445) \x0a 2. El Scan lanza TCP SYN a cada puerto (Primer paso de TCP Handshake), buscando una respuesta del Socket destino con un SYN+ACK (Segundo paso del TCP Handshake). \x0a 3. En caso de estar cerrado el destino responde con TCP RST (aunque tambi\xc3\xa9n puede estar filtrado). \x0a \x0a Este comando se usa para los siguientes ejemplos de filtros. \x0a \x0a FASES DE UN SCAN DE NMAP: \x0a \x0a https://nmap.org/book/nmap-phases.html \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Ports Search by NMAP (SYNs without SYN+ACK)","tcp.flags.syn==1 && tcp.flags.ack==0 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)","nmap scanme.nmap.org \x0a \x0a En este ejemplo (comando b\xc3\xa1sico) NMAP busc\xc3\xb3 los primeros 1000 puertos, mismos que se filtrar\xc3\xa1n con este comando (pueden haber retransmisiones TCP que se eliminan, pero se pueden visualizar si se quita la \xc3\xbaltima secci\xc3\xb3n del filtro) \x0a \x0a El filtro de Wireshark 'tcp.flags.syn==1 && tcp.flags.ack==0' se utiliza para capturar paquetes que contienen la se\xc3\xb1al SYN (synchronize) establecida en la cabecera de TCP, pero no incluyen la se\xc3\xb1al ACK (acknowledgment) establecida. \x0a \x0a En t\xc3\xa9rminos simples, este filtro se utiliza para capturar los paquetes de la fase de escaneo 'SYN Scan' de Nmap. \x0a \x0a En un Scan de NMAP usando 'SYN Scan', Nmap env\xc3\xada una solicitud SYN a cada puerto en un rango de puertos objetivo. Si un puerto est\xc3\xa1 abierto, el servidor responder\xc3\xa1 con un paquete SYN-ACK (sincronizaci\xc3\xb3n-acknowledgment). Si el puerto est\xc3\xa1 cerrado, el servidor responder\xc3\xa1 con un paquete RST (restablecer). Nmap utiliza esta t\xc3\xa9cnica para determinar qu\xc3\xa9 puertos est\xc3\xa1n abiertos y disponibles para su uso. \x0a \x0a Con el filtro 'tcp.flags.syn==1 && tcp.flags.ack==0', Wireshark captura todos los paquetes de solicitud SYN que se env\xc3\xadan a los puertos objetivo, pero no captura los paquetes SYN-ACK que responden. Por lo tanto, los paquetes capturados con este filtro indican los puertos que Nmap est\xc3\xa1 escaneando y pueden ayudar a identificar la direcci\xc3\xb3n IP del objetivo y los puertos que est\xc3\xa1n abiertos o cerrados en el sistema de destino. \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Port STATE: Open ----->>> Destination Server Responses (SYN+ACK)","tcp.flags.syn==0 && tcp.flags.ack==1 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)","nmap scanme.nmap.org \x0a \x0a En este ejemplo (comando b\xc3\xa1sico) NMAP busc\xc3\xb3 los primeros 1000 puertos, este comando busca las posibles respuestas de alg\xc3\xban puerto abierto (pueden haber retransmisiones TCP que se eliminan, pero se pueden visualizar si se quita la \xc3\xbaltima secci\xc3\xb3n del filtro) \x0a \x0a El filtro de Wireshark 'tcp.flags.syn==0 && tcp.flags.ack==1' se utiliza para capturar paquetes que NO contienen la se\xc3\xb1al SYN (synchronize) establecida en la cabecera de TCP, pero SI incluyen la se\xc3\xb1al ACK (acknowledgment) establecida (Es decir, la respuesta desde el servidor y su puerto abierto). \x0a \x0a En t\xc3\xa9rminos simples, este filtro se utiliza para capturar los paquetes de la fase respuesta de escaneo 'SYN Scan' de Nmap. \x0a \x0a En un Scan de NMAP usando 'SYN Scan', Nmap env\xc3\xada una solicitud SYN a cada puerto en un rango de puertos objetivo. Si un puerto est\xc3\xa1 abierto, el servidor responder\xc3\xa1 con un paquete SYN-ACK (sincronizaci\xc3\xb3n-acknowledgment). Si el puerto est\xc3\xa1 cerrado, el servidor responder\xc3\xa1 con un paquete RST (restablecer). Nmap utiliza esta t\xc3\xa9cnica para determinar qu\xc3\xa9 puertos est\xc3\xa1n abiertos y disponibles para su uso. \x0a "
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Port STATE: Filtered --->>> Destination Server no RST Response (SYN | no SYN/ACK & NO RST/ACK)","tcp.flags.syn==1 && tcp.flags.ack==0 && tcp.flags.reset == 1 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)","nmap scanme.nmap.org \x0a \x0a Un puerto filtrado NO responde con un RST (reset) como lo har\xc3\xada un servidor con un puerto cerrado. \x0a Al no recibir ni una respuesta SYN/ACK, ni un RST (puerto cerrado), es muy posible sea filtrado por un firewall y a prop\xc3\xb3sito no conteste el SYN."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //NMAP Basic Scan (TCP)           //Port STATE: Closed --->>> Destination Server no Response (SYN | no SYN/ACK & then RST/ACK)","tcp.flags.syn==0 && tcp.flags.ack==1 && !(tcp.analysis.fast_retransmission || tcp.analysis.retransmission)","nmap scanme.nmap.org \x0a \x0a Un servidor en linea pero con un puerto en espec\xc3\xadfico cerrado, por default contestar\xc3\xa1 con un RST en caso de tener cerrado el puerto, \x0a a diferencia de un puerto abierto que contesta con un SYN/ACK para seguir el proceso de 3-way-handshake."
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //Network or Host Target(s)       //Scan All Ports (0 - 65535)","nmap -p 10.scanme.nmap.org","There are a total of 65536 TCP ports. The ports are numbered 0-65535. Although port 0 is reserved and unavailable for direct use, it still exists and can be counted in the total number of port \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //Network or Host Target(s)       //Scan All Ports (0 - 65535)","nmap -p 10.scanme.nmap.org","There are a total of 65536 TCP ports. The ports are numbered 0-65535. Although port 0 is reserved and unavailable for direct use, it still exists and can be counted in the total number of port \x0a"
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //NMAP (NetSec & Hacking)   //Network or Host Target(s)       //Scan specific ports","nmap -p 10.scanme.nmap.org","nmap scanme.nmap.org \x0a \x0a Busca con el comando m\xc3\xa1s sencillo de NMAP los puertos abiertos de 'scanme.nmap.org' \x0a \x0a Los pasos que realiza son los siguientes: \x0a \x0a 1. Primero resuelve con un DNS la direcci\xc3\xb3n 'scanme.nmap.org' (45.33.32.156) Esta es la IP a la que agregar\xc3\xa1 los puertos para el scan (pe. 45.33.32.156:445) \x0a 2. El Scan lanza TCP SYN a cada puerto (Primer paso de TCP Handshake), buscando una respuesta del Socket destino con un SYN+ACK (Segundo paso del TCP Handshake). \x0a 3. En caso de estar cerrado el destino responde con TCP RST (aunque tambi\xc3\xa9n puede estar filtrado). \x0a \x0a Este comando se usa para los siguientes ejemplos de filtros. \x0a \x0a FASES DE UN SCAN DE NMAP: \x0a \x0a https://nmap.org/book/nmap-phases.html \x0a"
"TRUE","(((\xc2\xaf`\xc2\xb7._.\xc2\xb7\xc2\xb7\xc2\xb8.-~*\xc2\xb4\xc2\xa8\xc2\xaf\xc2\xa8`*\xc2\xb7~-.,-(_\xf0\x9f\x92\x80  Fz3\xef\xb8\x8fr0 \xf0\x9f\x92\x80 || \xf0\x9f\xa6\x88  \xf0\x9f\x85\x91\xf0\x9f\x85\x9b\xf0\x9f\x85\x90\xf0\x9f\x85\x92\xf0\x9f\x85\x9a \xf0\x9f\x85\xa2\xf0\x9f\x85\x97\xf0\x9f\x85\x90\xf0\x9f\x85\xa1\xf0\x9f\x85\x9a  v3.7 \xf0\x9f\xa6\x88 << || >>  \xf0\x9f\x98\x88 Twitter: @Fz3r0_OPs || \xf0\x9f\x98\x88 github.com/Fz3r0 || \xf0\x9f\x98\x88 youtube/@Fz3r0_OPs || \xf0\x9f\xa6\x85 H#    en Mexico_)-,.-~*\xc2\xb4\xc2\xa8\xc2\xaf\xc2\xa8`*\xc2\xb7~-.\xc2\xb8\xc2\xb7\xc2\xb7._.\xc2\xb7\xc2\xb4\xc2\xaf))) \x0a\x0a//Blue Team//nmap//nmap SYN scan","tcp.window_size_value == 1024 and tcp.flags.syn == 1","99% De seguridad que sea un scan de nmap, debido al default 1024 y la flag del syn. No visto en mundos reales "
"TRUE","Ports//Puerto TCP","tcp.port == 80","Buscar puerto 80 (http) | cambiar por el que quieras! "
"TRUE","Ports//Puerto UDP","udp.port == 53","Buscar puerto 53 (http) | cambiar por el que quieras! "
"TRUE","Ports//TCP src","tcp.srcport == 80",""
"TRUE","Ports//TCP dst","tcp.dstport == 80",""
"TRUE"," >>>>  \xf0\x9f\xa6\x88\xf0\x9f\x92\x80 START BLACK SHARK \xf0\x9f\x92\x80\xf0\x9f\xa6\x88  <<<< //Ports & Protocols//HTTP & HTTPS (Port 80, 8080)//HTTP - TCP Port 80 (Buscar HTTP por puerto 80)","tcp.port == 80","Es mejor buscar por puertos, HTTP solamente muestra los paquetes que no traen payload y  yo quiero ver todo, ack, y todo el transporte"
"TRUE","HTTP//HTTP response 200","http.response.code == 200","HTTP response 200"
"TRUE","HTTP//HTTP get","http.request.method == \x22GET\x22",""
"TRUE","HTTP//HTTP Post","http.request.method == \x22POST\x22",""
"TRUE","DNS//DNS Response","dns.flags.response == 1",""
"TRUE","DNS//DNS \x22A\x22 records","dns.qry.type == 1",""
"TRUE","Protocols//DNS//DNS Request","dns.flags.response == 0",""
"TRUE","Search (Matches & Contains)//Contains (case sensitive)","frame contains \x22google\x22","cualquier cosa dentro del frame que contenga la palabra \x22google\x22 "
"TRUE","Search (Matches & Contains)//Matches  (no case sensitive)","frame matches \x22server\x22","Igual a Contains pero sin case sensitive (peronalmente prefiero usar este)"
"TRUE","Search (Matches & Contains)//Buscar PC Windows (default)","frame matches \x22desktop\x22","Las m\xc3\xa1quinas Windows por default traen el string \x22desktop\x22"
"TRUE","Search (Matches & Contains)//Buscar Servicio Google","frame matches \x22google\x22",""
"TRUE","802.11//WiFI RSSI>=80","radiotap.dbm_antsignal >= -80","busca RSSI malos"
"TRUE","802.11//WiFi DataRate < 6mbps","radiotap.datarate <= 6","Busca data rates menores a 6mbps ;)"
"TRUE","802.11//WLAN reciever","wlan.ra","Receptor en la WLAN - ejemplo = wlan.ra == f0:f0:f0:f0:f0:f0"
"TRUE","802.11//WLAN Source Address","wlan.sa","Receptor en la WLAN - ejemplo = wlan.sa == f0:f0:f0:f0:f0:f0"
"TRUE","802.11//WLAN Retransmission","wlan.fc.retry == 1","WLAN Retransmission Ruckus filter style ||| usar con:<<  &&wlan.bssid==f0:bs:si:d0:f0 >>:para isolar el puro BSSID en uso >:D |||"
"TRUE","802.11//Management Frames//WLAN Management Frames","wlan.fc.type == 0","Aqui se pueden ver las retransmisiones u otros problemas de managmenet"
"TRUE","802.11//WLAN Beacon Frames"," wlan[0] != 0x80",""
"TRUE","802.11//WLAN Beacon Frames"," wlan[0] == 0x80","El identificador est\xc3\xa1 en \x22frame control\x22 y es valor hexadecimal "
"TRUE","802.11//WLAN Authentication Frame"," wlan[0] == 0xb0",""
"TRUE","802.11//WLAN only beacon & probes","wlan.fc.type_subtype==0x08 || wlan.fc.type_subtype==0x05","only beacon frames  & probe responses"
"TRUE","802.11//WLAN filter MAC","wlan.addr == 00:16:bc:3d:aa:57","Filter MAC from X or Y WLAN"
"TRUE","TCP//TCP Reset","tcp.flags.reset==1",""
"TRUE","TCP//TCP Port VARIOS","tcp.port in {80,8080,22}",""
"TRUE","TCP//TCP Port: desde @ hasta","tcp.port in {47640..47660}",""
"TRUE","DNS Response","dns.flags.response == 1",""
"TRUE","DNS Request","dns.flags.response == 0",""
"TRUE","WLAN Association Request","wlan.fc.type_subtype == 0 ",""
"TRUE","WLAN Association Response","wlan.fc.type_subtype == 1",""
"TRUE","WLAN Transmitter","wlan.ta","== MAC del AP"
"TRUE","Broadcast Packets","eth.dst.ig == 1",""
"TRUE","NO una VLAN","!vlan.id == 34","en caso de existir 802.1q"
"TRUE","Location Search","ip.geoip.dst_city == \x22Toronto\x22","Bajar las DB de GeoIP"
"TRUE","DNS time response","dns.time > 0.100","Filtrar el tiempo de respues del DNS menor a... (0.100 en este caso) | HINT! agrega la columna y filtra por tiempos de DNS ;)"
"TRUE","IP ALL","ip.addr == 192.168.1.100","puede ser a host: 192.168.1.100 | puede ser a subnet puede ser a host: 192.168.1.0/24"
"TRUE","IP Source","ip.src == 192.168.1.100","Origen de la IP"
"TRUE","IP Dest","ip.dst == 192.168.1.100","IP de destino"
"TRUE","TTL menor a...","ip.ttl < 10","TTL menor a 10"
"TRUE","TCP//TCP checksum error!","tcp.checksum_bad.expert","Checksums malos | HINT: esto se puede obtener seleccionadno el protcolo, boton der#    y PROTOCOL PREFERENCES (default apagado para no generar errores de falso-positivo)"
"TRUE","Random MAC Address","wlan.addr[0] & 0x03 == 2","Wireshark 4.0 introduces bitwise operator capable of masking each bit. So, use wlan.addr[0] & 0x03 = 2 as a display filter to show RFC 7042 random MAC addresses. "
"TRUE","HTTP Method = GET","http.request.method == \x22GET\x22",""
"TRUE","Multicast/Broadcast","eth.dst.ig == 1","Filtra el destino hacia Multicast o bradcast"
"TRUE","","",""
"TRUE","canal donde se capturo","wlan_radio.channel == 11",""
